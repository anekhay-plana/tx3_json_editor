[{"/home/user/work/JSONEditor/json-editor/src/index.tsx":"1","/home/user/work/JSONEditor/json-editor/src/App.tsx":"2","/home/user/work/JSONEditor/json-editor/src/reportWebVitals.js":"3","/home/user/work/JSONEditor/json-editor/src/components/MainWindow/MainWindow.tsx":"4","/home/user/work/JSONEditor/json-editor/src/json/ApprovalPolicy.js":"5","/home/user/work/JSONEditor/json-editor/src/json/RecordsManagementPolicy.js":"6","/home/user/work/JSONEditor/json-editor/src/json/SynchronizationPolicy.js":"7","/home/user/work/JSONEditor/json-editor/src/json/schemes/ApprovalPolicy.js":"8","/home/user/work/JSONEditor/json-editor/src/json/schemes/RecordsManagementPolicy.js":"9","/home/user/work/JSONEditor/json-editor/src/components/FileDropComponent/FileDropComponent.tsx":"10","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/NewEditor.tsx":"11","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/Constructor/Constructor.tsx":"12","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/Constructor/ObjectField/ObjectField.tsx":"13","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/Constructor/ArrayField/ArrayField.tsx":"14","/home/user/work/JSONEditor/json-editor/src/json/schemes/SynchronizationPolicy.js":"15","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/Constructor/ArrayField/helpers/index.js":"16","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindow.tsx":"17","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindowConstructor/EditWindowConstructor.tsx":"18","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindowConstructor/StringtField/StringtField.tsx":"19","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindowConstructor/ObjectField/ObjectField.tsx":"20","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindowConstructor/ArrayField/ArrayField.tsx":"21","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindowConstructor/ArrayField/helpers/index.js":"22","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindowConstructor/ArrayField/ItemsTable/ItemsTable.tsx":"23","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindowConstructor/ArrayField/ItemsTable/TableObjects/TableObjects.tsx":"24","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindowConstructor/ArrayField/ItemsTable/TableStrings/TableStrings.tsx":"25","/home/user/work/JSONEditor/json-editor/src/components/Selector/Selector.tsx":"26","/home/user/work/JSONEditor/json-editor/src/json/schemes/index.tsx":"27","/home/user/work/JSONEditor/json-editor/src/components/Selector/helpers/index.ts":"28","/home/user/work/JSONEditor/json-editor/src/components/MainWindow/helpers/index.tsx":"29","/home/user/work/JSONEditor/json-editor/src/components/MainWindow/Button/Button.tsx":"30","/home/user/work/JSONEditor/json-editor/src/components/ViewJson/ViewJson.tsx":"31"},{"size":500,"mtime":1614425664972,"results":"32","hashOfConfig":"33"},{"size":134,"mtime":1614234719086,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":1612261804158,"results":"35","hashOfConfig":"33"},{"size":3071,"mtime":1614600116594,"results":"36","hashOfConfig":"33"},{"size":6733,"mtime":1613724182360,"results":"37","hashOfConfig":"33"},{"size":20104,"mtime":1612427946994,"results":"38","hashOfConfig":"33"},{"size":4082,"mtime":1613722205956,"results":"39","hashOfConfig":"33"},{"size":1162,"mtime":1613746558211,"results":"40","hashOfConfig":"33"},{"size":1858,"mtime":1613985530799,"results":"41","hashOfConfig":"33"},{"size":1120,"mtime":1613556477839,"results":"42","hashOfConfig":"33"},{"size":1265,"mtime":1614586012802,"results":"43","hashOfConfig":"33"},{"size":699,"mtime":1614437246684,"results":"44","hashOfConfig":"33"},{"size":3174,"mtime":1614593879355,"results":"45","hashOfConfig":"33"},{"size":2917,"mtime":1614583404663,"results":"46","hashOfConfig":"33"},{"size":993,"mtime":1613720936070,"results":"47","hashOfConfig":"33"},{"size":511,"mtime":1613743635382,"results":"48","hashOfConfig":"33"},{"size":312,"mtime":1614586331929,"results":"49","hashOfConfig":"33"},{"size":753,"mtime":1614588561024,"results":"50","hashOfConfig":"33"},{"size":1293,"mtime":1614251543543,"results":"51","hashOfConfig":"33"},{"size":1750,"mtime":1614501571272,"results":"52","hashOfConfig":"33"},{"size":1718,"mtime":1614587049405,"results":"53","hashOfConfig":"33"},{"size":511,"mtime":1613743635382,"results":"54","hashOfConfig":"33"},{"size":571,"mtime":1614587049441,"results":"55","hashOfConfig":"33"},{"size":2878,"mtime":1614587438649,"results":"56","hashOfConfig":"33"},{"size":2401,"mtime":1614587664136,"results":"57","hashOfConfig":"33"},{"size":631,"mtime":1614528839596,"results":"58","hashOfConfig":"33"},{"size":521,"mtime":1614584786552,"results":"59","hashOfConfig":"33"},{"size":198,"mtime":1614517756037,"results":"60","hashOfConfig":"33"},{"size":536,"mtime":1614535689487,"results":"61","hashOfConfig":"33"},{"size":236,"mtime":1614589711748,"results":"62","hashOfConfig":"33"},{"size":810,"mtime":1614599450457,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1tr9n62",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"77"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"71"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"66"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"/home/user/work/JSONEditor/json-editor/src/index.tsx",[],["143","144"],"/home/user/work/JSONEditor/json-editor/src/App.tsx",[],"/home/user/work/JSONEditor/json-editor/src/reportWebVitals.js",[],["145","146"],"/home/user/work/JSONEditor/json-editor/src/components/MainWindow/MainWindow.tsx",["147","148","149","150"],"import * as React from 'react';\nimport NewEditor from \"../NewEditor/NewEditor\";\nimport Schemes from \"../../json/schemes\";\nimport Selector from \"../Selector/Selector\";\nimport {createEmptyJsonObject} from \"./helpers\";\nimport {useEffect, useRef, useState} from \"react\";\nimport Button from \"./Button/Button\";\nimport './MainWindow.css'\nimport ViewJson from \"../ViewJson/ViewJson\";\n\n\nconst MainWindow: React.FC = () => {\n    const publishRef: any = useRef();\n    const [selectedSchema, setSelectedSchema] = React.useState<any>(Schemes[0])\n    const [json, setJson] = React.useState<any>(createEmptyJsonObject(selectedSchema.value))\n    const [mod, setMod] = useState(true)\n\n    const handleChangeSelector = (e) => {\n        setSelectedSchema(e)\n    }\n\n    const handleChange = (object) => {\n        setJson(object)\n    }\n\n    useEffect(() => {\n        const {current} = publishRef;\n        if (!current) {\n            return;\n        }\n        current.setAttribute('href', 'data:application/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(json, null, 2)));\n        current.setAttribute('download', `${selectedSchema.label}.json`);\n    }, [json])\n\n    useEffect(() => {\n        handleClickCreateNewJson()\n    }, selectedSchema)\n\n    const handleClickCreateNewJson = () => {\n        setJson(createEmptyJsonObject(selectedSchema.value))\n    }\n\n    const handleChangeFile = (event) => {\n        const file = event.target.files[0];\n        let reader = new FileReader();\n\n        reader.readAsText(file);\n\n        reader.onload = function () {\n            const selectedJson = JSON.parse(String(reader.result))\n            const firstKey = Object.keys(selectedJson)[0]\n            Schemes.forEach((item, i) => {\n                    if (item.label === firstKey) {\n                        setJson(selectedJson)\n                        setSelectedSchema(Schemes[i])\n                    }\n                }\n            )\n        };\n    }\n    return (\n        <>\n            <div className='actions'>\n                <Selector variants={Schemes} handleChange={handleChangeSelector} selected={selectedSchema}/>\n                <Button text={'Create'} onClick={handleClickCreateNewJson}/>\n                or\n                <div className='add-input'>\n                    <input type='file' onChange={handleChangeFile}/>\n                </div>\n                <div className='publish'>\n                    <a ref={publishRef}>\n                        <Button text={'Publish'} onClick={() => {\n                        }}/>\n                    </a>\n                </div>\n            </div>\n            <div>\n                <div className='mod-selector'>\n                    <button onClick={()=>setMod(true)}>editor</button>\n                    <button onClick={()=>setMod(false)}>json</button>\n                </div>\n            {mod\n                ? <NewEditor yupSchema={selectedSchema.value} json={json} onChange={handleChange}/>\n                : <ViewJson data={json} onChange={handleChange}/>\n            }\n            </div>\n        </>\n    )\n}\nexport default MainWindow\n","/home/user/work/JSONEditor/json-editor/src/json/ApprovalPolicy.js",[],["151","152"],"/home/user/work/JSONEditor/json-editor/src/json/RecordsManagementPolicy.js",[],["153","154"],"/home/user/work/JSONEditor/json-editor/src/json/SynchronizationPolicy.js",[],["155","156"],"/home/user/work/JSONEditor/json-editor/src/json/schemes/ApprovalPolicy.js",[],"/home/user/work/JSONEditor/json-editor/src/json/schemes/RecordsManagementPolicy.js",[],"/home/user/work/JSONEditor/json-editor/src/components/FileDropComponent/FileDropComponent.tsx",["157"],"import React from 'react';\nimport SystemUpdateAltIcon from '@material-ui/icons/SystemUpdateAlt';\nimport {FileDrop} from 'react-file-drop';\nimport './FileDropComponennt.css'\n\ninterface Props {\n    handleDrop: (name: string, json: object) => void\n}\n\nconst FileDropComponent: React.FC<Props> = ({handleDrop}) => {\n\n    const handleOnDrop = (files) => {\n        let file = files[0];\n\n        let reader = new FileReader();\n\n        reader.readAsText(file);\n\n        reader.onload = function () {\n            const json = JSON.parse(String(reader.result))\n            const jsonName = Object.keys(json)[0]\n            handleDrop(jsonName, json);\n        };\n    }\n\n    return (\n        <div>\n            <div className='drop-container'>\n                <FileDrop\n                    onDrop={handleOnDrop}\n                >\n                        {/*<SystemUpdateAltIcon*/}\n                        {/*style={{color: '#92b0b3', fontSize: 48, }}*/}\n                        {/*/>*/}\n                        Drop file here!\n                </FileDrop>\n            </div>\n        </div>\n    );\n};\n\nexport default FileDropComponent\n",["158","159"],"/home/user/work/JSONEditor/json-editor/src/components/NewEditor/NewEditor.tsx",[],"/home/user/work/JSONEditor/json-editor/src/components/NewEditor/Constructor/Constructor.tsx",[],"/home/user/work/JSONEditor/json-editor/src/components/NewEditor/Constructor/ObjectField/ObjectField.tsx",["160","161","162"],"import * as React from \"react\";\nimport {useEffect, useState} from \"react\";\nimport Constructor from \"../Constructor\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport './ObjectField.css'\n\ninterface Props {\n    field?: any\n    json?: any\n    onChange?: any\n    name?: string | number\n    onClick?: any\n    childName?: string\n    selected: any\n    openPatent?: any\n    way?: string\n}\n\nconst ObjectField: React.FC<Props> = (\n    {\n        field,\n        json,\n        onChange,\n        name,\n        onClick,\n        childName,\n        selected,\n        openPatent,\n        way\n    }) => {\n\n    const [open, setOpen] = useState(name || childName ? false : true)\n    const fields = Object.keys(field.fields)\n    useEffect(()=>{\n        if(selected?.way!==undefined && way===selected?.way){\n            console.log(selected?.way,way)\n            handleClickObject()\n        }\n    },[json])\n\n    useEffect(() => {\n        if (way === selected?.way) {\n            openWhenChildOpen()\n        }\n    }, [selected])\n\n    const openWhenChildOpen = () => {\n        if (openPatent) {\n            openPatent()\n            setOpen(true)\n        }\n    }\n    useEffect(() => {\n        if (way?.indexOf('>') === -1) {\n            handleClickObject()\n        }\n    }, [field])\n\n    const title = childName ? childName : name\n\n    const handleClickObject = () => {\n        setOpen(true)\n        onClick(field, json, onChange, name, onClick, way)\n    }\n\n    const onOpen = () => {\n        setOpen(!open)\n    }\n\n    const onChangeInObject = (key, value) => {\n        if (name || name === 0) {\n            onChange(name, {...json, [key]: value})\n        } else {\n            onChange({...json, [key]: value})\n        }\n    }\n\n    const renderContent = fields.filter((item) => field.fields[item].type !== 'string')\n\n    return (\n        <div className='object-container'>\n            {Boolean(title) &&\n            <div className='title'>\n                {Boolean(renderContent.length) &&\n                <ExpandMoreIcon\n                    onClick={onOpen}\n                    className={open ? 'rev-icon' : ''}\n                />\n                }\n                <div\n                    className={way === selected?.way ? 'selected' : ''}\n                    onClick={handleClickObject}\n                >\n                    {title}\n                </div>\n            </div>\n            }\n            <div className={open ? 'object-child-container' : 'hidden'}>\n                {renderContent.map((item, i) =>\n                    <div key={i} className={'object-child-item'}>\n                        <Constructor\n                            field={field.fields[item]}\n                            json={json[item] || ''}\n                            name={item}\n                            onChange={onChangeInObject}\n                            onClick={onClick}\n                            selected={selected}\n                            openPatent={openWhenChildOpen}\n                            way={way ? way + '>' + item : item}\n                        />\n                    </div>\n                )}\n            </div>\n\n        </div>\n    )\n}\n\nexport default ObjectField\n","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/Constructor/ArrayField/ArrayField.tsx",["163","164"],"import * as React from \"react\";\nimport {useEffect, useState} from \"react\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Constructor from \"../Constructor\";\nimport './ArrayField.css'\n\ninterface Props {\n    field?: any\n    json?: any\n    name?: string\n    onChange?: any\n    onClick?: any\n    selected: any\n    openPatent?: any\n    way?: string\n}\n\nconst ArrayField: React.FC<Props> = (\n    {\n        field,\n        json = [],\n        name,\n        onChange,\n        onClick,\n        selected,\n        openPatent,\n        way\n    }) => {\n\n    const [open, setOpen] = useState(false)\n\n    const onOpen = () => {\n        setOpen(!open)\n    }\n\n    useEffect(()=>{\n        if(selected?.way==way){\n            handleClickArray()\n        }\n    },[json])\n\n    const onChangeInArray = (i, value) => {\n        const newArray = [...json]\n        newArray[i] = value\n        onChange(name, newArray)\n    }\n\n    const openWhenChildOpen = () => {\n        openPatent()\n        setOpen(true)\n    }\n\n    const handleClickArray = () => {\n        setOpen(true)\n        onClick(field, json, onChange, name, onClick, way)\n    }\n    return (\n        <div className='array-container'>\n            <div className='title'>\n                {field.innerType.type !== 'string' &&\n                <ExpandMoreIcon onClick={onOpen} className={open ? 'rev-icon' : ''}/>\n                }\n                <div\n                    className={way === selected?.way ? 'selected' : ''}\n                    onClick={handleClickArray}\n                >\n                    {name}\n                </div>\n            </div>\n            <div>\n                <div className='array-child-container'>\n                    {json&&field.innerType.type!=='string'&&\n                    <div className={!open ? 'hidden' : ''}>\n                        {\n                            json.map((item, i) =>\n                                <div key={i} className='array-item'>\n                                    <div className={way ? 'line' : ''}>\n                                    </div>\n                                    <Constructor\n                                        field={field.innerType}\n                                        json={item}\n                                        childName={name + (i + 1)}\n                                        name={i}\n                                        onChange={onChangeInArray}\n                                        onClick={onClick}\n                                        selected={selected}\n                                        openPatent={openWhenChildOpen}\n                                        way={way + '>' + name + (i + 1)}\n                                    />\n                                </div>\n                            )}\n                    </div>\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ArrayField\n","/home/user/work/JSONEditor/json-editor/src/json/schemes/SynchronizationPolicy.js",[],"/home/user/work/JSONEditor/json-editor/src/components/NewEditor/Constructor/ArrayField/helpers/index.js",["165"],"export const createObject = (schema) => {\n    const newObj = new Object(null)\n    for (const key in schema.fields){\n        switch (schema.fields[key].type){\n            case 'string':\n                newObj[key] = ''\n                break\n            case 'array':\n                newObj[key] = []\n                break\n            case 'object':\n                newObj[key] = createObject(schema[key])\n                break\n            default:\n                return null\n        }\n    }\n    return newObj\n}\n","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindow.tsx",[],"/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindowConstructor/EditWindowConstructor.tsx",[],"/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindowConstructor/StringtField/StringtField.tsx",["166"],"import {TextField} from \"@material-ui/core\";\nimport {useFormik} from \"formik\";\nimport * as yup from \"yup\";\nimport {useEffect} from \"react\";\n\ninterface Props {\n    field: any\n    json?: any\n    name?: string|number\n    onChange: any\n}\n\nconst StringField: React.FC<Props> = ({field, json, name,onChange}) => {\n\n    const formik = useFormik({\n        initialValues: {\n            label: typeof name === 'string'? name : '',\n            value: json\n        },\n        validateOnBlur: true,\n        validationSchema: yup.object({\n            'value':field\n        }),\n        onSubmit: () => {\n        }\n    });\n\n    useEffect(() => {\n        formik.setFieldValue('value', json)\n    }, [json])\n\n    const handleChange = (e) => {\n        formik.handleChange(e);\n        formik.setFieldTouched('value');\n        onChange(name,e.target.value)\n    }\n\n    return (\n        <div>\n            <TextField\n                fullWidth\n                name={'value'}\n                label={formik.values.label}\n                value={formik.values.value}\n                onChange={handleChange}\n                error={formik.touched.value && Boolean(formik.errors.value)}\n                helperText={formik.touched.value && formik.errors.value}\n            />\n        </div>\n    )\n}\n\nexport default StringField\n","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindowConstructor/ObjectField/ObjectField.tsx",["167","168","169"],"import EditWindowConstructor from \"../EditWindowConstructor\";\nimport * as React from \"react\";\nimport './ObjectField.css'\nimport {useEffect, useState} from \"react\";\n\ninterface Props {\n    field?: any\n    json?: any\n    onChange?: any\n    name?: string | number\n    onClick?: any\n    way: string\n}\n\nconst ObjectField: React.FC<Props> = ({field, json, onChange, name,onClick,way}) => {\n    const fields = Object.keys(field.fields)\n\n    const checkFields = () => {\n        fields.forEach(item => {\n            if (!json[item]){\n                onChangeInObject(item,[])\n            }\n        })\n    }\n\n    useEffect(()=> {\n        checkFields()\n    },[])\n\n    const onChangeInObject = (key, value) => {\n        const newObject = new Object(json)\n        newObject[key] = value\n        if (name || name === 0) {\n            onChange(name, newObject)\n        } else {\n            onChange(newObject)\n        }\n    }\n\n    return (\n        <div className='object-container'>\n            {Boolean(name && typeof name !== \"number\") &&\n            <div className='edit-title'>\n                <h2>\n                    {name}\n                </h2>\n            </div>\n            }\n                {fields.map((item, i) =>\n                    <div key={i} className='.object-child-item-editor'>\n                        <EditWindowConstructor\n                            field={field.fields[item]}\n                            json={json[item] || ''}\n                            name={item}\n                            onChange={onChangeInObject}\n                            onClick={onClick}\n                            way={way+'>'+ item}\n                        />\n                    </div>\n                )}\n        </div>\n    )\n}\n\nexport default ObjectField\n","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindowConstructor/ArrayField/ArrayField.tsx",["170","171","172"],"import * as React from \"react\";\nimport {TablePagination} from \"@material-ui/core\";\nimport './ArrayField.css'\nimport {createObject} from \"./helpers\";\nimport ItemsRows from \"./ItemsTable/ItemsTable\";\nimport {useEffect, useState} from \"react\";\n\ninterface Props {\n    field?: any\n    json?: any\n    name?: string\n    onChange?: any\n    onClick?: any\n    way: string\n}\n\nconst ArrayField: React.FC<Props> = ({field, json = [], name, onChange, onClick, way}) => {\n    const onChangeInArray = (i, value) => {\n        const newArray = [...json]\n        newArray[i] = value\n        onChange(name, newArray)\n    }\n\n    const handleClickAddItem = () => {\n        const newArray = [...json]\n        if (field.innerType.type === 'string') {\n            newArray.push('')\n        } else {\n            const newObj = createObject(field.innerType)\n            newArray.push(newObj)\n        }\n        onChange(name, newArray)\n    }\n\n    const handleClickRemoveItem = (index) => {\n        const newArray = json.filter((item, i) => i !== index)\n        onChange(name, newArray)\n    }\n\n    const handleClickItem = (item, i) => {\n        onClick(field.innerType, item, onChangeInArray, i, onClick, way+'>'+name + (i + 1))\n    }\n\n    return (\n        <div className='array-edit-container'>\n            <div className='edit-title'>\n                <h2>{name}</h2>\n            </div>\n            <div>\n                <ItemsRows\n                    json={json}\n                    field={field.innerType}\n                    onClick={handleClickItem}\n                    removeItem={handleClickRemoveItem}\n                    addItem={handleClickAddItem}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default ArrayField\n","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindowConstructor/ArrayField/helpers/index.js",["173"],"/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindowConstructor/ArrayField/ItemsTable/ItemsTable.tsx",[],"/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindowConstructor/ArrayField/ItemsTable/TableObjects/TableObjects.tsx",[],"/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindowConstructor/ArrayField/ItemsTable/TableStrings/TableStrings.tsx",[],["174","175"],"/home/user/work/JSONEditor/json-editor/src/components/Selector/Selector.tsx",[],"/home/user/work/JSONEditor/json-editor/src/json/schemes/index.tsx",[],"/home/user/work/JSONEditor/json-editor/src/components/Selector/helpers/index.ts",[],["176","177"],"/home/user/work/JSONEditor/json-editor/src/components/MainWindow/helpers/index.tsx",["178"],"export const createEmptyJsonObject = (schema) => {\n    const newObj = new Object(null)\n    for (const key in schema.fields){\n        switch (schema.fields[key].type){\n            case 'string':\n                newObj[key] = ''\n                break\n            case 'array':\n                newObj[key] = []\n                break\n            case 'object':\n                newObj[key] = createEmptyJsonObject(schema.fields[key])\n                break\n            default:\n                return null\n        }\n    }\n    return newObj\n}\n","/home/user/work/JSONEditor/json-editor/src/components/MainWindow/Button/Button.tsx",[],"/home/user/work/JSONEditor/json-editor/src/components/ViewJson/ViewJson.tsx",[],{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":33,"column":8,"nodeType":"185","endLine":33,"endColumn":14,"suggestions":"186"},{"ruleId":"183","severity":1,"message":"187","line":37,"column":8,"nodeType":"188","endLine":37,"endColumn":22},{"ruleId":"183","severity":1,"message":"189","line":37,"column":8,"nodeType":"188","endLine":37,"endColumn":22,"suggestions":"190"},{"ruleId":"191","severity":1,"message":"192","line":71,"column":21,"nodeType":"193","endLine":71,"endColumn":41},{"ruleId":"179","replacedBy":"194"},{"ruleId":"181","replacedBy":"195"},{"ruleId":"179","replacedBy":"196"},{"ruleId":"181","replacedBy":"197"},{"ruleId":"179","replacedBy":"198"},{"ruleId":"181","replacedBy":"199"},{"ruleId":"200","severity":1,"message":"201","line":2,"column":8,"nodeType":"188","messageId":"202","endLine":2,"endColumn":27},{"ruleId":"179","replacedBy":"203"},{"ruleId":"181","replacedBy":"204"},{"ruleId":"183","severity":1,"message":"205","line":39,"column":7,"nodeType":"185","endLine":39,"endColumn":13,"suggestions":"206"},{"ruleId":"183","severity":1,"message":"207","line":45,"column":8,"nodeType":"185","endLine":45,"endColumn":18,"suggestions":"208"},{"ruleId":"183","severity":1,"message":"209","line":57,"column":8,"nodeType":"185","endLine":57,"endColumn":15,"suggestions":"210"},{"ruleId":"211","severity":1,"message":"212","line":37,"column":25,"nodeType":"213","messageId":"214","endLine":37,"endColumn":27},{"ruleId":"183","severity":1,"message":"215","line":40,"column":7,"nodeType":"185","endLine":40,"endColumn":13,"suggestions":"216"},{"ruleId":"217","severity":1,"message":"218","line":3,"column":20,"nodeType":"219","messageId":"220","endLine":3,"endColumn":36},{"ruleId":"183","severity":1,"message":"221","line":30,"column":8,"nodeType":"185","endLine":30,"endColumn":14,"suggestions":"222"},{"ruleId":"200","severity":1,"message":"223","line":4,"column":20,"nodeType":"188","messageId":"202","endLine":4,"endColumn":28},{"ruleId":"183","severity":1,"message":"224","line":28,"column":7,"nodeType":"185","endLine":28,"endColumn":9,"suggestions":"225"},{"ruleId":"217","severity":1,"message":"218","line":31,"column":27,"nodeType":"219","messageId":"220","endLine":31,"endColumn":43},{"ruleId":"200","severity":1,"message":"226","line":2,"column":9,"nodeType":"188","messageId":"202","endLine":2,"endColumn":24},{"ruleId":"200","severity":1,"message":"227","line":6,"column":9,"nodeType":"188","messageId":"202","endLine":6,"endColumn":18},{"ruleId":"200","severity":1,"message":"223","line":6,"column":20,"nodeType":"188","messageId":"202","endLine":6,"endColumn":28},{"ruleId":"217","severity":1,"message":"218","line":2,"column":20,"nodeType":"219","messageId":"220","endLine":2,"endColumn":36},{"ruleId":"179","replacedBy":"228"},{"ruleId":"181","replacedBy":"229"},{"ruleId":"179","replacedBy":"196"},{"ruleId":"181","replacedBy":"197"},{"ruleId":"217","severity":1,"message":"218","line":2,"column":20,"nodeType":"219","messageId":"220","endLine":2,"endColumn":36},"no-native-reassign",["230"],"no-negated-in-lhs",["231"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selectedSchema.label'. Either include it or remove the dependency array.","ArrayExpression",["232"],"React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","Identifier","React Hook useEffect has a missing dependency: 'handleClickCreateNewJson'. Either include it or remove the dependency array.",["233"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["230"],["231"],["230"],["231"],["230"],["231"],"@typescript-eslint/no-unused-vars","'SystemUpdateAltIcon' is defined but never used.","unusedVar",["230"],["231"],"React Hook useEffect has missing dependencies: 'handleClickObject', 'selected?.way', and 'way'. Either include them or remove the dependency array.",["234"],"React Hook useEffect has missing dependencies: 'openWhenChildOpen' and 'way'. Either include them or remove the dependency array.",["235"],"React Hook useEffect has missing dependencies: 'handleClickObject' and 'way'. Either include them or remove the dependency array.",["236"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'handleClickArray', 'selected?.way', and 'way'. Either include them or remove the dependency array.",["237"],"no-new-object","The object literal notation {} is preferrable.","NewExpression","preferLiteral","React Hook useEffect has a missing dependency: 'formik'. Either include it or remove the dependency array.",["238"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'checkFields'. Either include it or remove the dependency array.",["239"],"'TablePagination' is defined but never used.","'useEffect' is defined but never used.",["230"],["231"],"no-global-assign","no-unsafe-negation",{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},"Update the dependencies array to be: [json, selectedSchema.label]",{"range":"256","text":"257"},"Update the dependencies array to be: [handleClickCreateNewJson]",{"range":"258","text":"259"},"Update the dependencies array to be: [handleClickObject, json, selected?.way, way]",{"range":"260","text":"261"},"Update the dependencies array to be: [openWhenChildOpen, selected, way]",{"range":"262","text":"263"},"Update the dependencies array to be: [field, handleClickObject, way]",{"range":"264","text":"265"},"Update the dependencies array to be: [handleClickArray, json, selected?.way, way]",{"range":"266","text":"267"},"Update the dependencies array to be: [formik, json]",{"range":"268","text":"269"},"Update the dependencies array to be: [checkFields]",{"range":"270","text":"271"},[1141,1147],"[json, selectedSchema.label]",[1214,1228],"[handleClickCreateNewJson]",[894,900],"[handleClickObject, json, selected?.way, way]",[1011,1021],"[openWhenChildOpen, selected, way]",[1266,1273],"[field, handleClickObject, way]",[758,764],"[handleClickArray, json, selected?.way, way]",[681,687],"[formik, json]",[647,649],"[checkFields]"]