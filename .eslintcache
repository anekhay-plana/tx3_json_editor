[{"/home/user/work/JSONEditor/json-editor/src/index.tsx":"1","/home/user/work/JSONEditor/json-editor/src/App.tsx":"2","/home/user/work/JSONEditor/json-editor/src/reportWebVitals.js":"3","/home/user/work/JSONEditor/json-editor/src/components/MainWindow/MainWindow.tsx":"4","/home/user/work/JSONEditor/json-editor/src/json/ApprovalPolicy.js":"5","/home/user/work/JSONEditor/json-editor/src/json/RecordsManagementPolicy.js":"6","/home/user/work/JSONEditor/json-editor/src/json/SynchronizationPolicy.js":"7","/home/user/work/JSONEditor/json-editor/src/json/schemes/ApprovalPolicy.js":"8","/home/user/work/JSONEditor/json-editor/src/json/schemes/RecordsManagementPolicy.js":"9","/home/user/work/JSONEditor/json-editor/src/components/FileDropComponent/FileDropComponent.tsx":"10","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/NewEditor.tsx":"11","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/Constructor/Constructor.tsx":"12","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/Constructor/ObjectField/ObjectField.tsx":"13","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/Constructor/ArrayField/ArrayField.tsx":"14","/home/user/work/JSONEditor/json-editor/src/json/schemes/SynchronizationPolicy.js":"15","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/Constructor/ArrayField/helpers/index.js":"16","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindow.tsx":"17","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindowConstructor/EditWindowConstructor.tsx":"18","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindowConstructor/StringtField/StringtField.tsx":"19","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindowConstructor/ObjectField/ObjectField.tsx":"20","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindowConstructor/ArrayField/ArrayField.tsx":"21","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindowConstructor/ArrayField/helpers/index.js":"22","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindowConstructor/ArrayField/ItemsTable/ItemsTable.tsx":"23","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindowConstructor/ArrayField/ItemsTable/TableObjects/TableObjects.tsx":"24","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindowConstructor/ArrayField/ItemsTable/TableStrings/TableStrings.tsx":"25","/home/user/work/JSONEditor/json-editor/src/components/Selector/Selector.tsx":"26","/home/user/work/JSONEditor/json-editor/src/json/schemes/index.tsx":"27","/home/user/work/JSONEditor/json-editor/src/components/Selector/helpers/index.ts":"28","/home/user/work/JSONEditor/json-editor/src/components/MainWindow/helpers/index.tsx":"29","/home/user/work/JSONEditor/json-editor/src/components/MainWindow/Button/Button.tsx":"30","/home/user/work/JSONEditor/json-editor/src/components/ViewJson/ViewJson.tsx":"31","/home/user/work/JSONEditor/json-editor/src/components/Breadcrumbs/Breadcrumbs.tsx":"32"},{"size":500,"mtime":1614425664972,"results":"33","hashOfConfig":"34"},{"size":134,"mtime":1614234719086,"results":"35","hashOfConfig":"34"},{"size":362,"mtime":1612261804158,"results":"36","hashOfConfig":"34"},{"size":4150,"mtime":1614694993383,"results":"37","hashOfConfig":"34"},{"size":6733,"mtime":1613724182360,"results":"38","hashOfConfig":"34"},{"size":20104,"mtime":1612427946994,"results":"39","hashOfConfig":"34"},{"size":4082,"mtime":1613722205956,"results":"40","hashOfConfig":"34"},{"size":1162,"mtime":1613746558211,"results":"41","hashOfConfig":"34"},{"size":1858,"mtime":1613985530799,"results":"42","hashOfConfig":"34"},{"size":1120,"mtime":1613556477839,"results":"43","hashOfConfig":"34"},{"size":1426,"mtime":1614680453306,"results":"44","hashOfConfig":"34"},{"size":703,"mtime":1614671559973,"results":"45","hashOfConfig":"34"},{"size":3130,"mtime":1614684720479,"results":"46","hashOfConfig":"34"},{"size":3250,"mtime":1614671919432,"results":"47","hashOfConfig":"34"},{"size":993,"mtime":1613720936070,"results":"48","hashOfConfig":"34"},{"size":511,"mtime":1613743635382,"results":"49","hashOfConfig":"34"},{"size":416,"mtime":1614701599906,"results":"50","hashOfConfig":"34"},{"size":702,"mtime":1614701957103,"results":"51","hashOfConfig":"34"},{"size":1293,"mtime":1614251543543,"results":"52","hashOfConfig":"34"},{"size":1754,"mtime":1614755291560,"results":"53","hashOfConfig":"34"},{"size":1811,"mtime":1614754787601,"results":"54","hashOfConfig":"34"},{"size":511,"mtime":1613743635382,"results":"55","hashOfConfig":"34"},{"size":571,"mtime":1614587049441,"results":"56","hashOfConfig":"34"},{"size":2878,"mtime":1614587438649,"results":"57","hashOfConfig":"34"},{"size":2401,"mtime":1614587664136,"results":"58","hashOfConfig":"34"},{"size":670,"mtime":1614693674430,"results":"59","hashOfConfig":"34"},{"size":521,"mtime":1614584786552,"results":"60","hashOfConfig":"34"},{"size":198,"mtime":1614517756037,"results":"61","hashOfConfig":"34"},{"size":536,"mtime":1614685978553,"results":"62","hashOfConfig":"34"},{"size":213,"mtime":1614698499390,"results":"63","hashOfConfig":"34"},{"size":850,"mtime":1614684966970,"results":"64","hashOfConfig":"34"},{"size":766,"mtime":1614684472172,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1tr9n62",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"68"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"/home/user/work/JSONEditor/json-editor/src/index.tsx",[],["148","149"],"/home/user/work/JSONEditor/json-editor/src/App.tsx",[],"/home/user/work/JSONEditor/json-editor/src/reportWebVitals.js",[],["150","151"],"/home/user/work/JSONEditor/json-editor/src/components/MainWindow/MainWindow.tsx",["152","153","154","155"],"import * as React from 'react';\nimport NewEditor from \"../NewEditor/NewEditor\";\nimport Schemes from \"../../json/schemes\";\nimport Selector from \"../Selector/Selector\";\nimport {createEmptyJsonObject} from \"./helpers\";\nimport {useEffect, useRef, useState} from \"react\";\nimport Button from \"./Button/Button\";\nimport './MainWindow.css'\nimport ViewJson from \"../ViewJson/ViewJson\";\nimport Breadcrumbs from \"../Breadcrumbs/Breadcrumbs\";\n\n\nconst MainWindow: React.FC = () => {\n    const publishRef: any = useRef();\n    const [selectedSchema, setSelectedSchema] = React.useState<any>(Schemes[0])\n    const [json, setJson] = React.useState<any>(createEmptyJsonObject(Schemes[0].value))\n    const [mod, setMod] = useState('editor')\n    const [searchWay, setSearchWay] = useState('')\n\n    const handleChangeSelector = (e) => {\n        setSelectedSchema(e)\n    }\n\n\n    const onClickSearchWay = (way) => {\n        setSearchWay(way)\n    }\n\n    const handleChange = (object) => {\n        setJson(object)\n    }\n\n    useEffect(() => {\n        const {current} = publishRef;\n        if (!current) {\n            return;\n        }\n        current.setAttribute('href', 'data:application/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(json, null, 2)));\n        current.setAttribute('download', `${selectedSchema.label}.json`);\n    }, [json])\n\n    useEffect(() => {\n        handleClickCreateNewJson()\n    }, selectedSchema)\n\n    const handleClickCreateNewJson = () => {\n        setJson(createEmptyJsonObject(selectedSchema.value))\n    }\n\n    const handleChangeFile = (event) => {\n        const file = event.target.files[0];\n        let reader = new FileReader();\n\n        reader.readAsText(file);\n\n        reader.onload = function () {\n            const selectedJson = JSON.parse(String(reader.result))\n            const firstKey = Object.keys(selectedJson)[0]\n            Schemes.forEach((item, i) => {\n                    if (item.label === firstKey) {\n                        setJson(selectedJson)\n                        setSelectedSchema(Schemes[i])\n                    }\n                }\n            )\n        };\n    }\n    return (\n        <div className='main-container'>\n            <div className='actions'>\n                <Selector variants={Schemes} handleChange={handleChangeSelector} selected={selectedSchema}/>\n                <Button text={'Create'} onClick={handleClickCreateNewJson}/>\n                or\n                <div className='add-input'>\n                    <label htmlFor=\"upload-photo\">Browse for a file...\n                        <input type=\"file\" name=\"photo\" id=\"upload-photo\" onChange={handleChangeFile}/>\n                    </label>\n                </div>\n                <div className='publish'>\n                    <a ref={publishRef}>\n                        <Button text={'Publish'} onClick={() => {\n                        }}/>\n                    </a>\n                </div>\n            </div>\n            <div>\n                <div className='mod-selector'>\n                    <div\n                        className={mod === 'editor' ? 'mod-selector-button selected-mod' : 'mod-selector-button'}\n                        onClick={() => setMod('editor')}\n                    >\n                        editor\n                    </div>\n                    <div\n                        className={mod === 'json' ? 'mod-selector-button selected-mod' : 'mod-selector-button'}\n                        onClick={() => setMod('json')}\n                    >\n                        json\n                    </div>\n                    <Breadcrumbs way={searchWay} onClickSearchWay={onClickSearchWay}/>\n                </div>\n                {mod === 'editor'\n                    ? <NewEditor yupSchema={selectedSchema.value}\n                                 json={json}\n                                 onChange={handleChange}\n                                 searchWay={searchWay}\n                                 onClickSearchWay={onClickSearchWay}\n                    />\n                    : <ViewJson data={json} onChange={handleChange}/>\n                }\n            </div>\n        </div>\n    )\n}\nexport default MainWindow\n","/home/user/work/JSONEditor/json-editor/src/json/ApprovalPolicy.js",[],["156","157"],"/home/user/work/JSONEditor/json-editor/src/json/RecordsManagementPolicy.js",[],["158","159"],"/home/user/work/JSONEditor/json-editor/src/json/SynchronizationPolicy.js",[],["160","161"],"/home/user/work/JSONEditor/json-editor/src/json/schemes/ApprovalPolicy.js",[],"/home/user/work/JSONEditor/json-editor/src/json/schemes/RecordsManagementPolicy.js",[],"/home/user/work/JSONEditor/json-editor/src/components/FileDropComponent/FileDropComponent.tsx",["162"],"import React from 'react';\nimport SystemUpdateAltIcon from '@material-ui/icons/SystemUpdateAlt';\nimport {FileDrop} from 'react-file-drop';\nimport './FileDropComponennt.css'\n\ninterface Props {\n    handleDrop: (name: string, json: object) => void\n}\n\nconst FileDropComponent: React.FC<Props> = ({handleDrop}) => {\n\n    const handleOnDrop = (files) => {\n        let file = files[0];\n\n        let reader = new FileReader();\n\n        reader.readAsText(file);\n\n        reader.onload = function () {\n            const json = JSON.parse(String(reader.result))\n            const jsonName = Object.keys(json)[0]\n            handleDrop(jsonName, json);\n        };\n    }\n\n    return (\n        <div>\n            <div className='drop-container'>\n                <FileDrop\n                    onDrop={handleOnDrop}\n                >\n                        {/*<SystemUpdateAltIcon*/}\n                        {/*style={{color: '#92b0b3', fontSize: 48, }}*/}\n                        {/*/>*/}\n                        Drop file here!\n                </FileDrop>\n            </div>\n        </div>\n    );\n};\n\nexport default FileDropComponent\n",["163","164"],"/home/user/work/JSONEditor/json-editor/src/components/NewEditor/NewEditor.tsx",[],"/home/user/work/JSONEditor/json-editor/src/components/NewEditor/Constructor/Constructor.tsx",[],"/home/user/work/JSONEditor/json-editor/src/components/NewEditor/Constructor/ObjectField/ObjectField.tsx",["165","166","167"],"import * as React from \"react\";\nimport {useEffect, useState} from \"react\";\nimport Constructor from \"../Constructor\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport './ObjectField.css'\n\ninterface Props {\n    field?: any\n    json?: any\n    onChange?: any\n    name?: string | number\n    onClick?: any\n    childName?: string\n    searchWay: string\n    openPatent?: any\n    way?: string\n}\n\nconst ObjectField: React.FC<Props> = (\n    {\n        field,\n        json,\n        onChange,\n        name,\n        onClick,\n        childName,\n        searchWay,\n        openPatent,\n        way\n    }) => {\n\n    const [open, setOpen] = useState(name || childName ? false : true)\n    const fields = Object.keys(field.fields)\n    useEffect(()=>{\n        if(way===searchWay){\n            handleClickObject()\n        }\n    },[json])\n\n    useEffect(() => {\n        if (way === searchWay) {\n            handleClickObject()\n            openWhenChildOpen()\n        }\n    }, [searchWay])\n\n    const openWhenChildOpen = () => {\n        if (openPatent) {\n            openPatent()\n            setOpen(true)\n        }\n    }\n    useEffect(() => {\n        if (way?.indexOf('>') === -1) {\n            handleClickObject()\n        }\n    }, [field])\n\n    const title = childName ? childName : name\n\n    const handleClickObject = () => {\n        setOpen(true)\n        onClick(field, json, onChange, name, onClick, way)\n    }\n\n    const onOpen = () => {\n        setOpen(!open)\n    }\n\n    const onChangeInObject = (key, value) => {\n        if (name || name === 0) {\n            onChange(name, {...json, [key]: value})\n        } else {\n            onChange({...json, [key]: value})\n        }\n    }\n\n    const renderContent = fields.filter((item) => field.fields[item].type !== 'string')\n\n    return (\n        <div className='object-container'>\n            {Boolean(title) &&\n            <div className='title'>\n                {Boolean(renderContent.length) &&\n                <ExpandMoreIcon\n                    onClick={onOpen}\n                    className={open ? 'rev-icon' : ''}\n                />\n                }\n                <div\n                    className={way === searchWay ? 'selected' : ''}\n                    onClick={handleClickObject}\n                >\n                    {title}\n                </div>\n            </div>\n            }\n            <div className={open ? 'object-child-container' : 'hidden'}>\n                {renderContent.map((item, i) =>\n                    <div key={i} className={'object-child-item'}>\n                        <Constructor\n                            field={field.fields[item]}\n                            json={json[item] || ''}\n                            name={item}\n                            onChange={onChangeInObject}\n                            onClick={onClick}\n                            searchWay={searchWay}\n                            openPatent={openWhenChildOpen}\n                            way={way ? way + '>' + item : item}\n                        />\n                    </div>\n                )}\n            </div>\n\n        </div>\n    )\n}\n\nexport default ObjectField\n","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/Constructor/ArrayField/ArrayField.tsx",["168","169","170"],"import * as React from \"react\";\nimport {useEffect, useState} from \"react\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Constructor from \"../Constructor\";\nimport './ArrayField.css'\n\ninterface Props {\n    field?: any\n    json?: any\n    name?: string\n    onChange?: any\n    onClick?: any\n    searchWay: string\n    openPatent?: any\n    way?: string\n}\n\nconst ArrayField: React.FC<Props> = (\n    {\n        field,\n        json = [],\n        name,\n        onChange,\n        onClick,\n        searchWay,\n        openPatent,\n        way = ''\n    }) => {\n\n    const [open, setOpen] = useState(false)\n\n    const onOpen = () => {\n        setOpen(!open)\n    }\n\n    useEffect(() => {\n        if (way === searchWay) {\n            handleClickArray()\n            openWhenChildOpen()\n        }\n    }, [searchWay])\n\n    useEffect(()=>{\n        if(searchWay==way){\n            handleClickArray()\n        }\n    },[json])\n\n    const onChangeInArray = (i, value) => {\n        const newArray = [...json]\n        newArray[i] = value\n        onChange(name, newArray)\n    }\n\n\n    const openWhenChildOpen = () => {\n        openPatent()\n        setOpen(true)\n    }\n\n    const handleClickArray = () => {\n        setOpen(true)\n        onClick(field, json, onChangeInArray, name, onClick, way)\n    }\n\n    const thisIsYourWay = () => {\n        if(field.innerType.type==='string'){\n            return searchWay.indexOf(way)+1\n        }\n        return way === searchWay\n    }\n\n    return (\n        <div className='array-container'>\n            <div className='title'>\n                {field.innerType.type !== 'string' &&\n                <ExpandMoreIcon onClick={onOpen} className={open ? 'rev-icon' : ''}/>\n                }\n                <div\n                    className={thisIsYourWay() ? 'selected' : ''}\n                    onClick={handleClickArray}\n                >\n                    {name}\n                </div>\n            </div>\n            <div>\n                <div className='array-child-container'>\n                    {json&&field.innerType.type!=='string'&&\n                    <div className={!open ? 'hidden' : ''}>\n                        {\n                            json.map((item, i) =>\n                                <div key={i} className='array-item'>\n                                    <div className={way ? 'line' : ''}>\n                                    </div>\n                                    <Constructor\n                                        field={field.innerType}\n                                        json={item}\n                                        childName={name + (i + 1)}\n                                        name={i}\n                                        onChange={onChangeInArray}\n                                        onClick={onClick}\n                                        searchWay={searchWay}\n                                        openPatent={openWhenChildOpen}\n                                        way={way + '>' + name + (i + 1)}\n                                    />\n                                </div>\n                            )}\n                    </div>\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ArrayField\n","/home/user/work/JSONEditor/json-editor/src/json/schemes/SynchronizationPolicy.js",[],"/home/user/work/JSONEditor/json-editor/src/components/NewEditor/Constructor/ArrayField/helpers/index.js",["171"],"export const createObject = (schema) => {\n    const newObj = new Object(null)\n    for (const key in schema.fields){\n        switch (schema.fields[key].type){\n            case 'string':\n                newObj[key] = ''\n                break\n            case 'array':\n                newObj[key] = []\n                break\n            case 'object':\n                newObj[key] = createObject(schema[key])\n                break\n            default:\n                return null\n        }\n    }\n    return newObj\n}\n",["172","173"],"/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindow.tsx",[],"/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindowConstructor/EditWindowConstructor.tsx",[],"/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindowConstructor/StringtField/StringtField.tsx",["174"],"import {TextField} from \"@material-ui/core\";\nimport {useFormik} from \"formik\";\nimport * as yup from \"yup\";\nimport {useEffect} from \"react\";\n\ninterface Props {\n    field: any\n    json?: any\n    name?: string|number\n    onChange: any\n}\n\nconst StringField: React.FC<Props> = ({field, json, name,onChange}) => {\n\n    const formik = useFormik({\n        initialValues: {\n            label: typeof name === 'string'? name : '',\n            value: json\n        },\n        validateOnBlur: true,\n        validationSchema: yup.object({\n            'value':field\n        }),\n        onSubmit: () => {\n        }\n    });\n\n    useEffect(() => {\n        formik.setFieldValue('value', json)\n    }, [json])\n\n    const handleChange = (e) => {\n        formik.handleChange(e);\n        formik.setFieldTouched('value');\n        onChange(name,e.target.value)\n    }\n\n    return (\n        <div>\n            <TextField\n                fullWidth\n                name={'value'}\n                label={formik.values.label}\n                value={formik.values.value}\n                onChange={handleChange}\n                error={formik.touched.value && Boolean(formik.errors.value)}\n                helperText={formik.touched.value && formik.errors.value}\n            />\n        </div>\n    )\n}\n\nexport default StringField\n","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindowConstructor/ObjectField/ObjectField.tsx",["175","176","177"],"import EditWindowConstructor from \"../EditWindowConstructor\";\nimport * as React from \"react\";\nimport './ObjectField.css'\nimport {useEffect, useState} from \"react\";\n\ninterface Props {\n    field?: any\n    json?: any\n    onChange?: any\n    name?: string | number\n    onClick?: any\n    way: string\n}\n\nconst ObjectField: React.FC<Props> = ({field, json, onChange, name,onClick,way}) => {\n    const fields = Object.keys(field.fields)\n\n    const checkFields = () => {\n        fields.forEach(item => {\n            if (!json[item]){\n                onChangeInObject(item,[])\n            }\n        })\n    }\n\n    useEffect(()=> {\n        checkFields()\n    },[])\n\n    const onChangeInObject = (key, value) => {\n        const newObject = new Object(json)\n        newObject[key] = value\n        if (name || name === 0) {\n            onChange(name, newObject)\n        } else {\n            onChange(newObject)\n        }\n    }\n\n    return (\n        <div className='object-edit-container'>\n            {Boolean(name && typeof name !== \"number\") &&\n            <div className='edit-title'>\n                <h2>\n                    {name}\n                </h2>\n            </div>\n            }\n                {fields.map((item, i) =>\n                    <div key={i} className='object-child-item-editor'>\n                        <EditWindowConstructor\n                            field={field.fields[item]}\n                            json={json[item] || ''}\n                            name={item}\n                            onChange={onChangeInObject}\n                            onClick={onClick}\n                            way={way+'>'+ item}\n                        />\n                    </div>\n                )}\n        </div>\n    )\n}\n\nexport default ObjectField\n","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindowConstructor/ArrayField/ArrayField.tsx",["178","179","180"],"/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindowConstructor/ArrayField/helpers/index.js",["181"],["182","183"],"/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindowConstructor/ArrayField/ItemsTable/ItemsTable.tsx",[],["184","185"],"/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindowConstructor/ArrayField/ItemsTable/TableObjects/TableObjects.tsx",[],"/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindowConstructor/ArrayField/ItemsTable/TableStrings/TableStrings.tsx",[],"/home/user/work/JSONEditor/json-editor/src/components/Selector/Selector.tsx",[],"/home/user/work/JSONEditor/json-editor/src/json/schemes/index.tsx",[],"/home/user/work/JSONEditor/json-editor/src/components/Selector/helpers/index.ts",[],["186","187"],"/home/user/work/JSONEditor/json-editor/src/components/MainWindow/helpers/index.tsx",["188"],"export const createEmptyJsonObject = (schema) => {\n    const newObj = new Object(null)\n    for (const key in schema.fields){\n        switch (schema.fields[key].type){\n            case 'string':\n                newObj[key] = ''\n                break\n            case 'array':\n                newObj[key] = []\n                break\n            case 'object':\n                newObj[key] = createEmptyJsonObject(schema.fields[key])\n                break\n            default:\n                return null\n        }\n    }\n    return newObj\n}\n","/home/user/work/JSONEditor/json-editor/src/components/MainWindow/Button/Button.tsx",[],"/home/user/work/JSONEditor/json-editor/src/components/ViewJson/ViewJson.tsx",[],"/home/user/work/JSONEditor/json-editor/src/components/Breadcrumbs/Breadcrumbs.tsx",[],{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","severity":1,"message":"194","line":40,"column":8,"nodeType":"195","endLine":40,"endColumn":14,"suggestions":"196"},{"ruleId":"193","severity":1,"message":"197","line":44,"column":8,"nodeType":"198","endLine":44,"endColumn":22},{"ruleId":"193","severity":1,"message":"199","line":44,"column":8,"nodeType":"198","endLine":44,"endColumn":22,"suggestions":"200"},{"ruleId":"201","severity":1,"message":"202","line":80,"column":21,"nodeType":"203","endLine":80,"endColumn":41},{"ruleId":"189","replacedBy":"204"},{"ruleId":"191","replacedBy":"205"},{"ruleId":"189","replacedBy":"206"},{"ruleId":"191","replacedBy":"207"},{"ruleId":"189","replacedBy":"208"},{"ruleId":"191","replacedBy":"209"},{"ruleId":"210","severity":1,"message":"211","line":2,"column":8,"nodeType":"198","messageId":"212","endLine":2,"endColumn":27},{"ruleId":"189","replacedBy":"213"},{"ruleId":"191","replacedBy":"214"},{"ruleId":"193","severity":1,"message":"215","line":38,"column":7,"nodeType":"195","endLine":38,"endColumn":13,"suggestions":"216"},{"ruleId":"193","severity":1,"message":"217","line":45,"column":8,"nodeType":"195","endLine":45,"endColumn":19,"suggestions":"218"},{"ruleId":"193","severity":1,"message":"219","line":57,"column":8,"nodeType":"195","endLine":57,"endColumn":15,"suggestions":"220"},{"ruleId":"193","severity":1,"message":"221","line":41,"column":8,"nodeType":"195","endLine":41,"endColumn":19,"suggestions":"222"},{"ruleId":"223","severity":1,"message":"224","line":44,"column":21,"nodeType":"225","messageId":"226","endLine":44,"endColumn":23},{"ruleId":"193","severity":1,"message":"227","line":47,"column":7,"nodeType":"195","endLine":47,"endColumn":13,"suggestions":"228"},{"ruleId":"229","severity":1,"message":"230","line":3,"column":20,"nodeType":"231","messageId":"232","endLine":3,"endColumn":36},{"ruleId":"189","replacedBy":"233"},{"ruleId":"191","replacedBy":"234"},{"ruleId":"193","severity":1,"message":"235","line":30,"column":8,"nodeType":"195","endLine":30,"endColumn":14,"suggestions":"236"},{"ruleId":"210","severity":1,"message":"237","line":4,"column":20,"nodeType":"198","messageId":"212","endLine":4,"endColumn":28},{"ruleId":"193","severity":1,"message":"238","line":28,"column":7,"nodeType":"195","endLine":28,"endColumn":9,"suggestions":"239"},{"ruleId":"229","severity":1,"message":"230","line":31,"column":27,"nodeType":"231","messageId":"232","endLine":31,"endColumn":43},{"ruleId":"210","severity":1,"message":"240","line":2,"column":9,"nodeType":"198","messageId":"212","endLine":2,"endColumn":24},{"ruleId":"210","severity":1,"message":"241","line":6,"column":9,"nodeType":"198","messageId":"212","endLine":6,"endColumn":18},{"ruleId":"210","severity":1,"message":"237","line":6,"column":20,"nodeType":"198","messageId":"212","endLine":6,"endColumn":28},{"ruleId":"229","severity":1,"message":"230","line":2,"column":20,"nodeType":"231","messageId":"232","endLine":2,"endColumn":36},{"ruleId":"189","replacedBy":"242"},{"ruleId":"191","replacedBy":"243"},{"ruleId":"189","replacedBy":"242"},{"ruleId":"191","replacedBy":"243"},{"ruleId":"189","replacedBy":"206"},{"ruleId":"191","replacedBy":"207"},{"ruleId":"229","severity":1,"message":"230","line":2,"column":20,"nodeType":"231","messageId":"232","endLine":2,"endColumn":36},"no-native-reassign",["244"],"no-negated-in-lhs",["245"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selectedSchema.label'. Either include it or remove the dependency array.","ArrayExpression",["246"],"React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","Identifier","React Hook useEffect has a missing dependency: 'handleClickCreateNewJson'. Either include it or remove the dependency array.",["247"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["244"],["245"],["244"],["245"],["244"],["245"],"@typescript-eslint/no-unused-vars","'SystemUpdateAltIcon' is defined but never used.","unusedVar",["244"],["245"],"React Hook useEffect has missing dependencies: 'handleClickObject', 'searchWay', and 'way'. Either include them or remove the dependency array.",["248"],"React Hook useEffect has missing dependencies: 'handleClickObject', 'openWhenChildOpen', and 'way'. Either include them or remove the dependency array.",["249"],"React Hook useEffect has missing dependencies: 'handleClickObject' and 'way'. Either include them or remove the dependency array.",["250"],"React Hook useEffect has missing dependencies: 'handleClickArray', 'openWhenChildOpen', and 'way'. Either include them or remove the dependency array.",["251"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'handleClickArray', 'searchWay', and 'way'. Either include them or remove the dependency array.",["252"],"no-new-object","The object literal notation {} is preferrable.","NewExpression","preferLiteral",["244"],["245"],"React Hook useEffect has a missing dependency: 'formik'. Either include it or remove the dependency array.",["253"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'checkFields'. Either include it or remove the dependency array.",["254"],"'TablePagination' is defined but never used.","'useEffect' is defined but never used.",["244"],["245"],"no-global-assign","no-unsafe-negation",{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},"Update the dependencies array to be: [json, selectedSchema.label]",{"range":"273","text":"274"},"Update the dependencies array to be: [handleClickCreateNewJson]",{"range":"275","text":"276"},"Update the dependencies array to be: [handleClickObject, json, searchWay, way]",{"range":"277","text":"278"},"Update the dependencies array to be: [handleClickObject, openWhenChildOpen, searchWay, way]",{"range":"279","text":"280"},"Update the dependencies array to be: [field, handleClickObject, way]",{"range":"281","text":"282"},"Update the dependencies array to be: [handleClickArray, openWhenChildOpen, searchWay, way]",{"range":"283","text":"284"},"Update the dependencies array to be: [handleClickArray, json, searchWay, way]",{"range":"285","text":"286"},"Update the dependencies array to be: [formik, json]",{"range":"287","text":"288"},"Update the dependencies array to be: [checkFields]",{"range":"289","text":"290"},[1320,1326],"[json, selectedSchema.label]",[1393,1407],"[handleClickCreateNewJson]",[823,829],"[handleClickObject, json, searchWay, way]",[968,979],"[handleClickObject, openWhenChildOpen, searchWay, way]",[1224,1231],"[field, handleClickObject, way]",[804,815],"[handleClickArray, openWhenChildOpen, searchWay, way]",[913,919],"[handleClickArray, json, searchWay, way]",[681,687],"[formik, json]",[647,649],"[checkFields]"]