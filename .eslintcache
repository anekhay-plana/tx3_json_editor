[{"/home/user/work/JSONEditor/json-editor/src/index.tsx":"1","/home/user/work/JSONEditor/json-editor/src/App.tsx":"2","/home/user/work/JSONEditor/json-editor/src/reportWebVitals.js":"3","/home/user/work/JSONEditor/json-editor/src/components/MainWindow/MainWindow.tsx":"4","/home/user/work/JSONEditor/json-editor/src/json/ApprovalPolicy.js":"5","/home/user/work/JSONEditor/json-editor/src/json/RecordsManagementPolicy.js":"6","/home/user/work/JSONEditor/json-editor/src/json/SynchronizationPolicy.js":"7","/home/user/work/JSONEditor/json-editor/src/json/schemes/ApprovalPolicy.js":"8","/home/user/work/JSONEditor/json-editor/src/json/schemes/RecordsManagementPolicy.js":"9","/home/user/work/JSONEditor/json-editor/src/components/FileDropComponent/FileDropComponent.tsx":"10","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/NewEditor.tsx":"11","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/Constructor/Constructor.tsx":"12","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/Constructor/ObjectField/ObjectField.tsx":"13","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/Constructor/ArrayField/ArrayField.tsx":"14","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/ViewJson/ViewJson.tsx":"15","/home/user/work/JSONEditor/json-editor/src/json/schemes/SynchronizationPolicy.js":"16","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/Constructor/ArrayField/helpers/index.js":"17","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindow.tsx":"18","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindowConstructor/EditWindowConstructor.tsx":"19","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindowConstructor/StringtField/StringtField.tsx":"20","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindowConstructor/ObjectField/ObjectField.tsx":"21","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindowConstructor/ArrayField/ArrayField.tsx":"22","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindowConstructor/ArrayField/helpers/index.js":"23","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindowConstructor/ArrayField/ItemsTable/ItemsTable.tsx":"24","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindowConstructor/ArrayField/ItemsTable/TableObjects/TableObjects.tsx":"25","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindowConstructor/ArrayField/ItemsTable/TableStrings/TableStrings.tsx":"26"},{"size":500,"mtime":1614425664972,"results":"27","hashOfConfig":"28"},{"size":134,"mtime":1614234719086,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":1612261804158,"results":"30","hashOfConfig":"28"},{"size":1250,"mtime":1614510012847,"results":"31","hashOfConfig":"28"},{"size":6733,"mtime":1613724182360,"results":"32","hashOfConfig":"28"},{"size":20104,"mtime":1612427946994,"results":"33","hashOfConfig":"28"},{"size":4082,"mtime":1613722205956,"results":"34","hashOfConfig":"28"},{"size":1162,"mtime":1613746558211,"results":"35","hashOfConfig":"28"},{"size":1858,"mtime":1613985530799,"results":"36","hashOfConfig":"28"},{"size":1120,"mtime":1613556477839,"results":"37","hashOfConfig":"28"},{"size":1351,"mtime":1614508832177,"results":"38","hashOfConfig":"28"},{"size":699,"mtime":1614437246684,"results":"39","hashOfConfig":"28"},{"size":3180,"mtime":1614506815602,"results":"40","hashOfConfig":"28"},{"size":2885,"mtime":1614513508881,"results":"41","hashOfConfig":"28"},{"size":1088,"mtime":1613724702080,"results":"42","hashOfConfig":"28"},{"size":993,"mtime":1613720936070,"results":"43","hashOfConfig":"28"},{"size":511,"mtime":1613743635382,"results":"44","hashOfConfig":"28"},{"size":312,"mtime":1614446116618,"results":"45","hashOfConfig":"28"},{"size":651,"mtime":1614441593584,"results":"46","hashOfConfig":"28"},{"size":1293,"mtime":1614251543543,"results":"47","hashOfConfig":"28"},{"size":1750,"mtime":1614501571272,"results":"48","hashOfConfig":"28"},{"size":1735,"mtime":1614446337197,"results":"49","hashOfConfig":"28"},{"size":511,"mtime":1613743635382,"results":"50","hashOfConfig":"28"},{"size":585,"mtime":1614446121530,"results":"51","hashOfConfig":"28"},{"size":2917,"mtime":1614514267615,"results":"52","hashOfConfig":"28"},{"size":2120,"mtime":1614514196388,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1tr9n62",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"67"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"56"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"61"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},"/home/user/work/JSONEditor/json-editor/src/index.tsx",[],["122","123"],"/home/user/work/JSONEditor/json-editor/src/App.tsx",[],"/home/user/work/JSONEditor/json-editor/src/reportWebVitals.js",[],["124","125"],"/home/user/work/JSONEditor/json-editor/src/components/MainWindow/MainWindow.tsx",["126"],"import * as React from 'react';\nimport NewEditor from \"../NewEditor/NewEditor\";\nimport {RecordsManagementPolicySchema} from \"../../json/schemes/RecordsManagementPolicy\";\nimport {RecordsManagementPolicy} from \"../../json/RecordsManagementPolicy\";\nimport './MainWindow.css'\n\nconst MainWindow: React.FC = () => {\n    const [selectedJson, setSelectedJson] = React.useState<any>(null)\n    const handleDrop = (name: string, newJson: object) => {\n        const json = selectedJson.filter(item => item.name === name)\n        setSelectedJson({...json[0], json: newJson})\n    }\n\n    const handleChangeFile = (event) => {\n        const file = event.target.files[0];\n        let reader = new FileReader();\n\n        reader.readAsText(file);\n\n        reader.onload = function () {\n            const json = JSON.parse(String(reader.result))\n            console.log('LOOG bob', json)\n        };\n        //Make a request to server and send formData\n    }\n\n    return (\n        <>\n            <div>\n                <input type='file' onChange={handleChangeFile}/>\n            </div>\n            <div>\n                <NewEditor yupSchema={RecordsManagementPolicySchema} json={RecordsManagementPolicy}/>\n            </div>\n        </>\n    )\n}\nexport default MainWindow\n","/home/user/work/JSONEditor/json-editor/src/json/ApprovalPolicy.js",[],["127","128"],"/home/user/work/JSONEditor/json-editor/src/json/RecordsManagementPolicy.js",[],"/home/user/work/JSONEditor/json-editor/src/json/SynchronizationPolicy.js",[],["129","130"],"/home/user/work/JSONEditor/json-editor/src/json/schemes/ApprovalPolicy.js",[],"/home/user/work/JSONEditor/json-editor/src/json/schemes/RecordsManagementPolicy.js",[],"/home/user/work/JSONEditor/json-editor/src/components/FileDropComponent/FileDropComponent.tsx",["131"],"import React from 'react';\nimport SystemUpdateAltIcon from '@material-ui/icons/SystemUpdateAlt';\nimport {FileDrop} from 'react-file-drop';\nimport './FileDropComponennt.css'\n\ninterface Props {\n    handleDrop: (name: string, json: object) => void\n}\n\nconst FileDropComponent: React.FC<Props> = ({handleDrop}) => {\n\n    const handleOnDrop = (files) => {\n        let file = files[0];\n\n        let reader = new FileReader();\n\n        reader.readAsText(file);\n\n        reader.onload = function () {\n            const json = JSON.parse(String(reader.result))\n            const jsonName = Object.keys(json)[0]\n            handleDrop(jsonName, json);\n        };\n    }\n\n    return (\n        <div>\n            <div className='drop-container'>\n                <FileDrop\n                    onDrop={handleOnDrop}\n                >\n                        {/*<SystemUpdateAltIcon*/}\n                        {/*style={{color: '#92b0b3', fontSize: 48, }}*/}\n                        {/*/>*/}\n                        Drop file here!\n                </FileDrop>\n            </div>\n        </div>\n    );\n};\n\nexport default FileDropComponent\n",["132","133"],"/home/user/work/JSONEditor/json-editor/src/components/NewEditor/NewEditor.tsx",[],"/home/user/work/JSONEditor/json-editor/src/components/NewEditor/Constructor/Constructor.tsx",[],"/home/user/work/JSONEditor/json-editor/src/components/NewEditor/Constructor/ObjectField/ObjectField.tsx",["134","135"],"import * as React from \"react\";\nimport {useEffect, useState} from \"react\";\nimport Constructor from \"../Constructor\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport './ObjectField.css'\n\ninterface Props {\n    field?: any\n    json?: any\n    onChange?: any\n    name?: string | number\n    onClick?: any\n    childName?: string\n    selected: any\n    openPatent?: any\n    way?: string\n}\n\nconst ObjectField: React.FC<Props> = (\n    {\n        field,\n        json,\n        onChange,\n        name,\n        onClick,\n        childName,\n        selected,\n        openPatent,\n        way\n    }) => {\n\n\n    const [open, setOpen] = useState(name || childName ? false : true)\n    const fields = Object.keys(field.fields)\n\n    const checkFields = () => {\n        fields.forEach(item => {\n            if (!json[item]) {\n                onChangeInObject(item, [])\n            }\n        })\n    }\n    useEffect(() => {\n        if(selected && way === selected.way){\n            openWhenChildOpen()\n        }\n    }, [selected])\n\n    const openWhenChildOpen = () => {\n        if (openPatent) {\n            openPatent()\n            setOpen(true)\n        }\n    }\n    useEffect(() => {\n        if(way?.indexOf('>')===-1){\n            handleClickObject()\n        }\n        checkFields()\n    }, [])\n\n    const title = childName ? childName : name\n\n    const handleClickObject = () => {\n        setOpen(true)\n        onClick(field, json, onChange, name, onClick, way)\n    }\n\n    const onOpen = () => {\n        setOpen(!open)\n    }\n\n    const onChangeInObject = (key, value) => {\n        if (name || name === 0) {\n            onChange(name, {...json, [key]: value})\n        } else {\n            onChange({...json, [key]: value})\n        }\n    }\n\n    const renderContent = fields.filter((item) => field.fields[item].type !== 'string')\n\n    return (\n        <div className='object-container'>\n            {Boolean(title) &&\n            <div className='title'>\n                {Boolean(renderContent.length) &&\n                <ExpandMoreIcon\n                    onClick={onOpen}\n                    className={open ? 'rev-icon' : ''}\n                />\n                }\n                <div\n                    className={selected && way === selected.way ? 'selected' : ''}\n                    onClick={handleClickObject}\n                >\n                    {title}\n                </div>\n            </div>\n            }\n            <div className={open ? 'object-child-container':'hidden'}>\n                {fields.map((item, i) =>\n                    <div key={i} className='object-child-item'>\n                        <Constructor\n                            field={field.fields[item]}\n                            json={json[item] || ''}\n                            name={item}\n                            onChange={onChangeInObject}\n                            onClick={onClick}\n                            selected={selected}\n                            openPatent={openWhenChildOpen}\n                            way={way? way+'>'+ item: item}\n                        />\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default ObjectField\n","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/Constructor/ArrayField/ArrayField.tsx",["136","137"],"import * as React from \"react\";\nimport {useEffect, useState} from \"react\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Constructor from \"../Constructor\";\nimport './ArrayField.css'\n\ninterface Props {\n    field?: any\n    json?: any\n    name?: string\n    onChange?: any\n    onClick?: any\n    selected: any\n    openPatent?: any\n    way?: string\n}\n\nconst ArrayField: React.FC<Props> = (\n    {\n        field,\n        json = [],\n        name,\n        onChange,\n        onClick,\n        selected,\n        openPatent,\n        way\n    }) => {\n\n    const [open, setOpen] = useState(false)\n\n    const onOpen = () => {\n        setOpen(!open)\n    }\n\n    useEffect(()=>{\n        if(selected?.way==way){\n            handleClickArray()\n        }\n    },[json])\n\n    const onChangeInArray = (i, value) => {\n        const newArray = [...json]\n        newArray[i] = value\n        onChange(name, newArray)\n    }\n\n    const openWhenChildOpen = () => {\n        openPatent()\n        setOpen(true)\n    }\n\n    const handleClickArray = () => {\n        setOpen(true)\n        onClick(field, json, onChange, name, onClick, way)\n    }\n    return (\n        <div className='array-container'>\n            <div className='title'>\n                {field.innerType.type !== 'string' &&\n                <ExpandMoreIcon onClick={onOpen} className={open ? 'rev-icon' : ''}/>\n                }\n                <div\n                    className={way === selected?.way ? 'selected' : ''}\n                    onClick={handleClickArray}\n                >\n                    {name}\n                </div>\n            </div>\n            <div>\n                <div className='array-child-container'>\n                    {json &&\n                    <div className={!open ? 'hidden' : ''}>\n                        {\n                            json.map((item, i) =>\n                                <div key={i} className='array-item'>\n                                    <div className={way ? 'line' : ''}>\n                                    </div>\n                                    <Constructor\n                                        field={field.innerType}\n                                        json={item}\n                                        childName={name + (i + 1)}\n                                        name={i}\n                                        onChange={onChangeInArray}\n                                        onClick={onClick}\n                                        selected={selected}\n                                        openPatent={openWhenChildOpen}\n                                        way={way + '>' + name + (i + 1)}\n                                    />\n                                </div>\n                            )}\n                    </div>\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ArrayField\n","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/ViewJson/ViewJson.tsx",["138"],"import * as React from 'react';\nimport JSONInput from 'react-json-editor-ajrm';\nimport locale from 'react-json-editor-ajrm/locale/en';\nimport './ViewJson.css'\n\ninterface Props {\n    scrollTop: number\n    data: object\n}\n\ninterface RefObject<T> {\n    readonly current: T | null\n}\n\nconst ViewJson: React.FC<Props>  = ({scrollTop, data}) => {\n    const scrollRef:RefObject<any> = React.createRef()\n    const clientHeight:RefObject<any> = React.createRef()\n\n    React.useEffect(() => {\n        scrollRef.current.scrollTop = clientHeight.current.clientHeight * scrollTop\n    }, [scrollTop])\n\n    return (\n        <div className='json-display-window' ref={scrollRef}>\n            <div ref={clientHeight}>\n                <JSONInput\n                    locale={locale}\n                    placeholder={data}\n                    confirmGood={false}\n                    viewOnly={true}\n                    width='100%'\n                    height='100%'\n                    style={{labelColumn:{display:'none'}}}\n                />\n            </div>\n        </div>\n    )\n\n}\nexport default ViewJson\n",["139","140"],"/home/user/work/JSONEditor/json-editor/src/json/schemes/SynchronizationPolicy.js",[],"/home/user/work/JSONEditor/json-editor/src/components/NewEditor/Constructor/ArrayField/helpers/index.js",["141"],"export const createObject = (schema) => {\n    const newObj = new Object(null)\n    for (const key in schema.fields){\n        switch (schema.fields[key].type){\n            case 'string':\n                newObj[key] = ''\n                break\n            case 'array':\n                newObj[key] = []\n                break\n            case 'object':\n                newObj[key] = createObject(schema[key])\n                break\n            default:\n                return null\n        }\n    }\n    return newObj\n}\n","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindow.tsx",[],"/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindowConstructor/EditWindowConstructor.tsx",[],"/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindowConstructor/StringtField/StringtField.tsx",["142"],"import {TextField} from \"@material-ui/core\";\nimport {useFormik} from \"formik\";\nimport * as yup from \"yup\";\nimport {useEffect} from \"react\";\n\ninterface Props {\n    field: any\n    json?: any\n    name?: string|number\n    onChange: any\n}\n\nconst StringField: React.FC<Props> = ({field, json, name,onChange}) => {\n\n    const formik = useFormik({\n        initialValues: {\n            label: typeof name === 'string'? name : '',\n            value: json\n        },\n        validateOnBlur: true,\n        validationSchema: yup.object({\n            'value':field\n        }),\n        onSubmit: () => {\n        }\n    });\n\n    useEffect(() => {\n        formik.setFieldValue('value', json)\n    }, [json])\n\n    const handleChange = (e) => {\n        formik.handleChange(e);\n        formik.setFieldTouched('value');\n        onChange(name,e.target.value)\n    }\n\n    return (\n        <div>\n            <TextField\n                fullWidth\n                name={'value'}\n                label={formik.values.label}\n                value={formik.values.value}\n                onChange={handleChange}\n                error={formik.touched.value && Boolean(formik.errors.value)}\n                helperText={formik.touched.value && formik.errors.value}\n            />\n        </div>\n    )\n}\n\nexport default StringField\n","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindowConstructor/ObjectField/ObjectField.tsx",["143","144","145"],"import EditWindowConstructor from \"../EditWindowConstructor\";\nimport * as React from \"react\";\nimport './ObjectField.css'\nimport {useEffect, useState} from \"react\";\n\ninterface Props {\n    field?: any\n    json?: any\n    onChange?: any\n    name?: string | number\n    onClick?: any\n    way: string\n}\n\nconst ObjectField: React.FC<Props> = ({field, json, onChange, name,onClick,way}) => {\n    const fields = Object.keys(field.fields)\n\n    const checkFields = () => {\n        fields.forEach(item => {\n            if (!json[item]){\n                onChangeInObject(item,[])\n            }\n        })\n    }\n\n    useEffect(()=> {\n        checkFields()\n    },[])\n\n    const onChangeInObject = (key, value) => {\n        const newObject = new Object(json)\n        newObject[key] = value\n        if (name || name === 0) {\n            onChange(name, newObject)\n        } else {\n            onChange(newObject)\n        }\n    }\n\n    return (\n        <div className='object-container'>\n            {Boolean(name && typeof name !== \"number\") &&\n            <div className='edit-title'>\n                <h2>\n                    {name}\n                </h2>\n            </div>\n            }\n                {fields.map((item, i) =>\n                    <div key={i} className='.object-child-item-editor'>\n                        <EditWindowConstructor\n                            field={field.fields[item]}\n                            json={json[item] || ''}\n                            name={item}\n                            onChange={onChangeInObject}\n                            onClick={onClick}\n                            way={way+'>'+ item}\n                        />\n                    </div>\n                )}\n        </div>\n    )\n}\n\nexport default ObjectField\n","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindowConstructor/ArrayField/ArrayField.tsx",["146","147","148"],"import * as React from \"react\";\nimport {TablePagination} from \"@material-ui/core\";\nimport './ArrayField.css'\nimport {createObject} from \"./helpers\";\nimport ItemsRows from \"./ItemsTable/ItemsTable\";\nimport {useEffect, useState} from \"react\";\n\ninterface Props {\n    field?: any\n    json?: any\n    name?: string\n    onChange?: any\n    onClick?: any\n    way: string\n}\n\nconst ArrayField: React.FC<Props> = ({field, json = [], name, onChange, onClick, way}) => {\n    const onChangeInArray = (i, value) => {\n        const newArray = [...json]\n        newArray[i] = value\n        onChange(name, newArray)\n    }\n\n    const handleClickAddItem = () => {\n        const newArray = [...json]\n        if (field.innerType.type === 'string') {\n            newArray.push('')\n        } else {\n            const newObj = createObject(field.innerType)\n            newArray.push(newObj)\n        }\n        onChange(name, newArray)\n    }\n\n    const handleClickRemoveItem = (index) => {\n        const newArray = json.filter((item, i) => i !== index)\n        onChange(name, newArray)\n    }\n\n    const handleClickItem = (item, i) => {\n        onClick(field.innerType, item, onChangeInArray, i, onClick, way+'>'+name + (i + 1))\n    }\n\n    return (\n        <div className='array-edit-container'>\n            <div className='edit-title'>\n                <h2>{name}</h2>\n                <button onClick={handleClickAddItem}>add</button>\n            </div>\n            <div>\n                <ItemsRows\n                    json={json}\n                    field={field.innerType}\n                    onClick={handleClickItem}\n                    removeItem={handleClickRemoveItem}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default ArrayField\n","/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindowConstructor/ArrayField/helpers/index.js",["149"],"/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindowConstructor/ArrayField/ItemsTable/ItemsTable.tsx",[],"/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindowConstructor/ArrayField/ItemsTable/TableObjects/TableObjects.tsx",[],"/home/user/work/JSONEditor/json-editor/src/components/NewEditor/EditWindow/EditWindowConstructor/ArrayField/ItemsTable/TableStrings/TableStrings.tsx",[],["150","151"],{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":9,"column":11,"nodeType":"158","messageId":"159","endLine":9,"endColumn":21},{"ruleId":"152","replacedBy":"160"},{"ruleId":"154","replacedBy":"161"},{"ruleId":"152","replacedBy":"162"},{"ruleId":"154","replacedBy":"163"},{"ruleId":"156","severity":1,"message":"164","line":2,"column":8,"nodeType":"158","messageId":"159","endLine":2,"endColumn":27},{"ruleId":"152","replacedBy":"165"},{"ruleId":"154","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":47,"column":8,"nodeType":"169","endLine":47,"endColumn":18,"suggestions":"170"},{"ruleId":"167","severity":1,"message":"171","line":60,"column":8,"nodeType":"169","endLine":60,"endColumn":10,"suggestions":"172"},{"ruleId":"173","severity":1,"message":"174","line":37,"column":25,"nodeType":"175","messageId":"176","endLine":37,"endColumn":27},{"ruleId":"167","severity":1,"message":"177","line":40,"column":7,"nodeType":"169","endLine":40,"endColumn":13,"suggestions":"178"},{"ruleId":"167","severity":1,"message":"179","line":21,"column":8,"nodeType":"169","endLine":21,"endColumn":19,"suggestions":"180"},{"ruleId":"152","replacedBy":"160"},{"ruleId":"154","replacedBy":"161"},{"ruleId":"181","severity":1,"message":"182","line":3,"column":20,"nodeType":"183","messageId":"184","endLine":3,"endColumn":36},{"ruleId":"167","severity":1,"message":"185","line":30,"column":8,"nodeType":"169","endLine":30,"endColumn":14,"suggestions":"186"},{"ruleId":"156","severity":1,"message":"187","line":4,"column":20,"nodeType":"158","messageId":"159","endLine":4,"endColumn":28},{"ruleId":"167","severity":1,"message":"188","line":28,"column":7,"nodeType":"169","endLine":28,"endColumn":9,"suggestions":"189"},{"ruleId":"181","severity":1,"message":"182","line":31,"column":27,"nodeType":"183","messageId":"184","endLine":31,"endColumn":43},{"ruleId":"156","severity":1,"message":"190","line":2,"column":9,"nodeType":"158","messageId":"159","endLine":2,"endColumn":24},{"ruleId":"156","severity":1,"message":"191","line":6,"column":9,"nodeType":"158","messageId":"159","endLine":6,"endColumn":18},{"ruleId":"156","severity":1,"message":"187","line":6,"column":20,"nodeType":"158","messageId":"159","endLine":6,"endColumn":28},{"ruleId":"181","severity":1,"message":"182","line":2,"column":20,"nodeType":"183","messageId":"184","endLine":2,"endColumn":36},{"ruleId":"152","replacedBy":"192"},{"ruleId":"154","replacedBy":"193"},"no-native-reassign",["194"],"no-negated-in-lhs",["195"],"@typescript-eslint/no-unused-vars","'handleDrop' is assigned a value but never used.","Identifier","unusedVar",["194"],["195"],["194"],["195"],"'SystemUpdateAltIcon' is defined but never used.",["194"],["195"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'openWhenChildOpen' and 'way'. Either include them or remove the dependency array.","ArrayExpression",["196"],"React Hook useEffect has missing dependencies: 'checkFields', 'handleClickObject', and 'way'. Either include them or remove the dependency array.",["197"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'handleClickArray', 'selected?.way', and 'way'. Either include them or remove the dependency array.",["198"],"React Hook React.useEffect has missing dependencies: 'clientHeight' and 'scrollRef'. Either include them or remove the dependency array.",["199"],"no-new-object","The object literal notation {} is preferrable.","NewExpression","preferLiteral","React Hook useEffect has a missing dependency: 'formik'. Either include it or remove the dependency array.",["200"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'checkFields'. Either include it or remove the dependency array.",["201"],"'TablePagination' is defined but never used.","'useEffect' is defined but never used.",["194"],["195"],"no-global-assign","no-unsafe-negation",{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},"Update the dependencies array to be: [openWhenChildOpen, selected, way]",{"range":"214","text":"215"},"Update the dependencies array to be: [checkFields, handleClickObject, way]",{"range":"216","text":"217"},"Update the dependencies array to be: [handleClickArray, json, selected?.way, way]",{"range":"218","text":"219"},"Update the dependencies array to be: [clientHeight, scrollRef, scrollTop]",{"range":"220","text":"221"},"Update the dependencies array to be: [formik, json]",{"range":"222","text":"223"},"Update the dependencies array to be: [checkFields]",{"range":"224","text":"225"},[1010,1020],"[openWhenChildOpen, selected, way]",[1283,1285],"[checkFields, handleClickObject, way]",[758,764],"[handleClickArray, json, selected?.way, way]",[572,583],"[clientHeight, scrollRef, scrollTop]",[681,687],"[formik, json]",[647,649],"[checkFields]"]