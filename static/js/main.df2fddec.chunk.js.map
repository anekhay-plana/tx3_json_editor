{"version":3,"sources":["json/ApprovalPolicy.js","components/NewEditor/Constructor/ObjectField/ObjectField.tsx","components/NewEditor/Constructor/ArrayField/helpers/index.js","components/NewEditor/Constructor/ArrayField/ArrayField.tsx","components/NewEditor/Constructor/StringtField/StringtField.tsx","components/NewEditor/Constructor/Constructor.tsx","components/NewEditor/ViewJson/ViewJson.tsx","components/NewEditor/NewEditor.tsx","json/schemes/ApprovalPolicy.js","components/MainWindow/MainWindow.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["ApprovalPolicy","ObjectField","field","json","onChange","name","onChangeInObject","key","value","fields","Object","keys","className","Boolean","map","item","i","createObject","schema","newObj","type","ArrayField","useState","open","setOpen","onChangeInArray","newArray","trigger","onOpening","onClose","transitionTime","innerType","onClick","index","filter","handleClickRemoveItem","push","StringField","useEffect","formik","setFieldValue","useFormik","initialValues","label","validateOnBlur","validationSchema","yup","onSubmit","TextField","fullWidth","values","e","handleChange","setFieldTouched","target","error","touched","errors","helperText","Constructor","props","renderField","ViewJson","scrollTop","data","scrollRef","React","clientHeight","current","ref","locale","placeholder","confirmGood","viewOnly","width","height","style","labelColumn","display","NewEditor","yupSchema","formData","setFormData","setScrollTop","onScroll","object","ApprovalPolicySchema","required","url","of","MainWindow","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df2fddec.chunk.js","sourcesContent":["export const ApprovalPolicy ={\n    \"Approval Policy\": {\n            \"Version\": \"Tx3 Demo 1.0.0.1\",\n            \"Schema\":\n                {\n                    \"ID\": \"http://tx3services.com/schemas/0/0/approval-policy.json\",\n                    \"Major\": \"0\",\n                    \"Minor\": \"0\"\n                },\n            \"Approval Groups\": [\n                \"Business\",\n                \"Quality\",\n                \"Technical\"\n            ],\n            \"Route Templates\": [\n                {\n                    \"Name\": \"GxP Defect Approval\",\n                    \"Rank\": \"1\",\n                    \"Record Types\": [ \"Defect\" ],\n                    \"Levels\": [\n                        {\n                            \"Name\": \"Level 1\",\n                            \"Approvers\": [ \"Business\", \"Technical\" ]\n                        },\n                        {\n                            \"Name\": \"Level 2\",\n                            \"Approvers\": [ \"Quality\" ]\n                        }\n                    ],\n                    \"Constraints\": [\n                        {\n                            \"Type\": \"Field Is One Of\",\n                            \"Name\": \"GxP\",\n                            \"Values\": [\"Y\"]\n                        }\n                    ]\n                },\n                {\n                    \"Name\": \"Defect Approval\",\n                    \"Rank\": \"1\",\n                    \"Record Types\": [ \"Defect\" ],\n                    \"Levels\": [\n                        {\n                            \"Name\": \"Level 1\",\n                            \"Approvers\": [ \"Business\", \"Technical\" ]\n                        }\n                    ]\n                },\n                {\n                    \"Name\": \"GxP Story Approval\",\n                    \"Rank\": \"1\",\n                    \"Record Types\": [ \"Story\" ],\n                    \"Levels\": [\n                        {\n                            \"Name\": \"Level 1\",\n                            \"Approvers\": [ \"Business\", \"Technical\" ]\n                        },\n                        {\n                            \"Name\": \"Level 2\",\n                            \"Approvers\": [ \"Quality\" ]\n                        }\n                    ],\n                    \"Constraints\": [\n                        {\n                            \"Type\": \"Field Is One Of\",\n                            \"Name\": \"GxP\",\n                            \"Values\": [\"Y\"]\n                        }\n                    ]\n                },            {\n                    \"Name\": \"Story Approval\",\n                    \"Rank\": \"1\",\n                    \"Record Types\": [ \"Story\" ],\n                    \"Levels\": [\n                        {\n                            \"Name\": \"Level 1\",\n                            \"Approvers\": [ \"Business\", \"Technical\" ]\n                        }\n                    ]\n                },\n                {\n                    \"Name\": \"Issue Approval\",\n                    \"Rank\": \"1\",\n                    \"Record Types\": [ \"Issue\" ],\n                    \"Levels\": [\n                        {\n                            \"Name\": \"Level 1\",\n                            \"Approvers\": [ \"Business\", \"Technical\" ]\n                        }\n                    ]\n                },\n                {\n                    \"Name\": \"GxP Test Run Approval\",\n                    \"Rank\": \"1\",\n                    \"Record Types\": [\n                        \"Test Run\",\n                        \"XRay Execution\"\n                    ],\n                    \"Levels\": [\n                        {\n                            \"Name\": \"Level 1\",\n                            \"Approvers\": [ \"Business\", \"Technical\" ]\n                        },\n                        {\n                            \"Name\": \"Level 2\",\n                            \"Approvers\": [ \"Quality\" ]\n                        }\n                    ],\n                    \"Constraints\": [\n                        {\n                            \"Type\": \"Field Is One Of\",\n                            \"Name\": \"GxP\",\n                            \"Values\": [\"Y\"]\n                        }\n                    ]\n                },\n                {\n                    \"Name\": \"Test Run Approval\",\n                    \"Rank\": \"1\",\n                    \"Record Types\": [\n                        \"Test Run\",\n                        \"XRay Execution\"\n                    ],\n                    \"Levels\": [\n                        {\n                            \"Name\": \"Level 1\",\n                            \"Approvers\": [ \"Business\", \"Technical\" ]\n                        }\n                    ]\n                },\n                {\n                    \"Name\": \" GxP Test Case Approval\",\n                    \"Rank\": \"1\",\n                    \"Record Types\": [\n                        \"Test Case\",\n                        \"XRay Test\",\n                        \"XRay Scenario\",\n                        \"XRay Generic Test\",\n                        \"XRay Manual Test\",\n                        \"XRay Pre-Condition\"\n                    ],\n                    \"Levels\": [\n                        {\n                            \"Name\": \"Level 1\",\n                            \"Approvers\": [ \"Technical\", \"Business\" ]\n                        },\n                        {\n                            \"Name\": \"Level 2\",\n                            \"Approvers\": [\"Quality\"]\n                        }\n                    ],\n                    \"Constraints\": [\n                        {\n                            \"Type\": \"Field Is One Of\",\n                            \"Name\": \"GxP\",\n                            \"Values\": [\"Y\"]\n                        }\n                    ]\n                },\n                {\n                    \"Name\": \" Test Case Approval\",\n                    \"Rank\": \"1\",\n                    \"Record Types\": [\n                        \"Test Case\",\n                        \"XRay Test\",\n                        \"XRay Scenario\",\n                        \"XRay Generic Test\",\n                        \"XRay Manual Test\",\n                        \"XRay Pre-Condition\"\n                    ],\n                    \"Levels\": [\n                        {\n                            \"Name\": \"Level 1\",\n                            \"Approvers\": [ \"Technical\", \"Business\" ]\n                        }\n                    ]\n                },\n                {\n                    \"Name\": \"Default Route Template\",\n                    \"Rank\": \"99\",\n                    \"Record Types\": [  \"General\" ],\n                    \"Levels\": [\n                        {\n                            \"Name\": \"Level 1\",\n                            \"Approvers\": [ \"Business\" ]\n                        }\n                    ]\n                }\n            ]\n        }\n}\n","import Constructor from \"../Constructor\";\nimport './ObjectField.css'\n\ninterface Props {\n    field: any\n    json?: any\n    onChange:any\n    name?: string|number\n}\n\nconst ObjectField: React.FC<Props> = ({field, json,  onChange,name}) => {\n    const onChangeInObject = (key, value)=>{\n        if(name || name === 0) {\n            onChange(name,{...json, [key]: value})\n        }else{\n            onChange({...json, [key]: value})\n        }\n    }\n    const fields = Object.keys(field.fields)\n    return (\n        <div className='object-container'>\n            {Boolean(name && typeof name !== \"number\") &&\n            <div>{name}</div>\n            }\n                {fields.map((item, i) =>\n                    <div key={i} className='object-child-container'>\n                        <Constructor\n                            field={field.fields[item]}\n                            json={json[item]||''}\n                            name={item}\n                            onChange={onChangeInObject}/>\n                    </div>\n                )}\n        </div>\n    )\n}\n\nexport default ObjectField\n","export const createObject = (schema) => {\n    const newObj = new Object(null)\n    for (const key in schema.fields){\n        switch (schema.fields[key].type){\n            case 'string':\n                newObj[key] = ''\n                break\n            case 'array':\n                newObj[key] = []\n                break\n            case 'object':\n                newObj[key] = createObject(schema[key])\n                break\n            default:\n                return null\n        }\n    }\n    return newObj\n}\n","import AddCircleIcon from '@material-ui/icons/AddCircle';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Constructor from \"../Constructor\";\nimport Collapsible from \"react-collapsible\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport * as React from \"react\";\nimport './ArrayField.css'\nimport {useState} from \"react\";\nimport {createObject} from \"./helpers\";\n\ninterface Props {\n    field: any\n    json?: any\n    name?: string\n    onChange: any\n}\n\nconst ArrayField: React.FC<Props> = ({field, json = [], name, onChange}) => {\n    const [open, setOpen] = useState(false)\n    const onChangeInArray = (i, value) => {\n        const newArray = [...json]\n        newArray[i] = value\n        onChange(name, newArray)\n    }\n    const onOpen = () => {\n        setOpen(true)\n    }\n\n    const onClose = () => {\n        setOpen(false)\n    }\n\n    const handleClickAddItem = () => {\n        const newArray = [...json]\n        if (field.innerType.type === 'string') {\n            newArray.push('')\n        } else {\n            const newObj = createObject(field.innerType)\n            newArray.push(newObj)\n        }\n        onChange(name, newArray)\n    }\n\n    const handleClickRemoveItem = (index) => {\n        const newArray = json.filter((item, i) => i !== index)\n        onChange(name, newArray)\n    }\n\n    return (\n        <div className='array-container'>\n            <Collapsible\n                trigger={\n                    <div className='title'>\n                        <div>{name}</div>\n                        <ExpandMoreIcon className={open ? 'rev-icon' : 'icon'}/>\n                    </div>\n                }\n                onOpening={onOpen}\n                onClose={onClose}\n                transitionTime={200}\n            >\n                {open &&\n                <div>\n                    <div className='array-children'>\n                        {json.map((item, i) =>\n                            <div key={i} className='array-item'>\n                                <div className='field'>\n                                    <Constructor\n                                        field={field.innerType}\n                                        json={item}\n                                        name={i}\n                                        onChange={onChangeInArray}\n                                    />\n                                </div>\n                                <div className='remove-field'>\n                                    <DeleteIcon\n                                        onClick={() => handleClickRemoveItem(i)}\n                                    />\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                    <div className='add-field'>\n                        <div className='add-button'>\n                            <AddCircleIcon\n                                onClick={handleClickAddItem}\n                            />\n                        </div>\n                    </div>\n                </div>\n                }\n            </Collapsible>\n        </div>\n    )\n}\n\nexport default ArrayField\n","import {TextField} from \"@material-ui/core\";\nimport {useFormik} from \"formik\";\nimport * as yup from \"yup\";\nimport {useEffect} from \"react\";\n\ninterface Props {\n    field: any\n    json?: any\n    name?: string|number\n    onChange: any\n}\n\nconst StringField: React.FC<Props> = ({field, json, name,onChange}) => {\n\n    useEffect(() => {\n            formik.setFieldValue('value', json)\n    }, [json])\n\n    const formik = useFormik({\n        initialValues: {\n            label: typeof name === 'string'? name : '',\n            value: json\n        },\n        validateOnBlur: true,\n        validationSchema: yup.object({\n            'value':field\n        }),\n        onSubmit: () => {\n        }\n    });\n\n    const handleChange = (e) => {\n        formik.handleChange(e);\n        formik.setFieldTouched('value');\n        onChange(name,e.target.value)\n    }\n\n    return (\n        <div>\n            <TextField\n                fullWidth\n                name={'value'}\n                label={formik.values.label}\n                value={formik.values.value}\n                onChange={handleChange}\n                error={formik.touched.value && Boolean(formik.errors.value)}\n                helperText={formik.touched.value && formik.errors.value}\n            />\n        </div>\n    )\n}\n\nexport default StringField\n","import ObjectField from \"./ObjectField/ObjectField\";\nimport ArrayField from \"./ArrayField/ArrayField\";\nimport StringField from \"./StringtField/StringtField\";\n\ninterface Props {\n    field: any\n    json?: any\n    name? :string\n    onChange: any\n}\n\nconst Constructor: React.FC<Props> = (props) => {\n    const type = props.field.type\n    const renderField = () => {\n        switch (type){\n            case \"object\":\n                return <ObjectField {...props} />\n            case \"array\":\n                return <ArrayField {...props}/>\n            case \"string\":\n                return <StringField {...props}/>\n            default:\n                return null\n        }\n    }\n    return renderField()\n}\n\nexport default Constructor\n","import * as React from 'react';\nimport JSONInput from 'react-json-editor-ajrm';\nimport locale from 'react-json-editor-ajrm/locale/en';\nimport './ViewJson.css'\n\ninterface Props {\n    scrollTop: number\n    data: object\n}\n\ninterface RefObject<T> {\n    readonly current: T | null\n}\n\nconst ViewJson: React.FC<Props>  = ({scrollTop, data}) => {\n    const scrollRef:RefObject<any> = React.createRef()\n    const clientHeight:RefObject<any> = React.createRef()\n\n    React.useEffect(() => {\n        scrollRef.current.scrollTop = clientHeight.current.clientHeight * scrollTop\n    }, [scrollTop])\n\n    return (\n        <div className='json-display-window' ref={scrollRef}>\n            <div ref={clientHeight}>\n                <JSONInput\n                    locale={locale}\n                    placeholder={data}\n                    confirmGood={false}\n                    viewOnly={true}\n                    width='100%'\n                    height='100%'\n                    style={{labelColumn:{display:'none'}}}\n                />\n            </div>\n        </div>\n    )\n\n}\nexport default ViewJson\n","import * as React from \"react\";\nimport {useState} from \"react\";\nimport {SynchronizationPolicy} from '../../json/SynchronizationPolicy'\nimport {ApprovalPolicy} from \"../../json/ApprovalPolicy\";\nimport Constructor from \"./Constructor/Constructor\";\nimport ViewJson from \"./ViewJson/ViewJson\";\nimport './NewEditor.css'\n\ninterface Props {\n    yupSchema: any\n}\n\ninterface RefObject<T> {\n    readonly current: T | null\n}\n\nconst NewEditor: React.FC<Props> = ({yupSchema}) => {\n    const scrollRef: RefObject<any> = React.createRef()\n    const clientHeight: RefObject<any> = React.createRef()\n    const [formData, setFormData] = useState(ApprovalPolicy)\n    const [scrollTop, setScrollTop] = React.useState(0)\n\n    const handleScroll = () => {\n        setScrollTop(scrollRef.current.scrollTop / (clientHeight.current.clientHeight))\n    }\n\n    const handleChange = (object) => {\n        setFormData(object)\n    }\n\n    return (\n        <div className='container'>\n            <div\n                className='json-editor-window'\n                onScroll={handleScroll}\n                ref={scrollRef}\n            >\n                <div ref={clientHeight}>\n                    <Constructor field={yupSchema} json={formData} onChange={handleChange}/>\n                </div>\n            </div>\n            <div>\n                <ViewJson scrollTop={scrollTop} data={formData}/>\n            </div>\n        </div>\n    )\n}\n\nexport default NewEditor\n","import * as yup from 'yup'\n\nexport const ApprovalPolicySchema = yup.object({\n    \"Approval Policy\": yup.object({\n        \"Version\":yup.string().required('required'),\n        \"Schema\": yup.object({\n            \"ID\": yup.string().url('Enter valid url').required('required'),\n            \"Major\": yup.string().required('required'),\n            \"Minor\": yup.string().required('required')\n        }),\n        \"Approval Groups\": yup.array().of(\n            yup.string().required('required')\n        ),\n        \"Route Templates\": yup.array().of(\n            yup.object({\n                \"Name\": yup.string().required('required'),\n                \"Rank\": yup.string().required('required'),\n                \"Record Types\":yup.array().of(\n                    yup.string().required('required')\n                ),\n                \"Levels\": yup.array().of(\n                    yup.object({\n                        \"Name\": yup.string().required('required'),\n                        \"Approvers\":yup.array().of(\n                            yup.string().required('required')\n                        ),\n                    })\n\n                )\n            })\n        )\n    })\n})\n","import * as React from 'react';\nimport './MainWindow.css'\nimport NewEditor from \"../NewEditor/NewEditor\";\nimport {SynchronizationPolicySchema} from \"../../json/schemes/SynchronizationPolicy\";\nimport {ApprovalPolicySchema} from \"../../json/schemes/ApprovalPolicy\";\n\n\nconst MainWindow: React.FC = () => {\n    return (\n        <div>\n            <NewEditor yupSchema={ApprovalPolicySchema}/>\n        </div>\n    )\n}\nexport default MainWindow\n","import MainWindow from \"./components/MainWindow/MainWindow\";\n\nconst App = () => <MainWindow/>\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}