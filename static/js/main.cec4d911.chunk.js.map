{"version":3,"sources":["json/SynchronizationPolicy.js","components/NewEditor/Constructor/ObjectField/ObjectField.tsx","components/NewEditor/Constructor/ArrayField/ArrayField.tsx","components/NewEditor/Constructor/StringtField/StringtField.tsx","components/NewEditor/Constructor/Constructor.tsx","components/NewEditor/ViewJson/ViewJson.tsx","components/NewEditor/NewEditor.tsx","json/schemes/SynchronizationPolicy.js","components/MainWindow/MainWindow.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["SynchronizationPolicy","ObjectField","field","json","onChange","name","onChangeInObject","key","value","fields","Object","keys","className","map","item","i","ArrayField","useState","open","setOpen","onChangeInArray","newArray","trigger","onOpening","onClose","transitionTime","innerType","StringField","formik","useFormik","initialValues","label","validateOnBlur","validationSchema","yup","onSubmit","TextField","fullWidth","values","e","handleChange","setFieldTouched","target","error","touched","Boolean","errors","helperText","Constructor","props","type","renderField","ViewJson","data","locale","placeholder","confirmGood","viewOnly","width","height","NewEditor","yupSchema","formData","setFormData","object","SynchronizationPolicySchema","required","of","url","MainWindow","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cec4d911.chunk.js","sourcesContent":["export const SynchronizationPolicy = {\n    \"Synchronization Policy\": {\n        \"Version\": \"VERA Demo Env - 0.0.0.2\",\n        \"Locations\": [\n            {\n                \"System\": \"JIRA\",\n                \"Name\": \"Tx3 Demo Jira Server\",\n                \"Server\": \"http://jira-demo.tx3services.com:8080\",\n                \"Service Account\": \"test_vera\",\n                \"Service Password\": \"x2kwtrR5cZ/jdjdhjghdkjuyliuy9A=\",\n                \"Urls\": {\n                    \"Browser\": \"http://jira-demo.tx3services.com:8080/browse/{Key}\",\n                    \"API\": \"http://jira-demo.tx3services.com:8080/rest/api/2/issue/{Issue ID}\"\n                }\n            },\n            {\n                \"System\": \"JIRA\",\n                \"Name\": \"Tx3 JIRA Test Server\",\n                \"Server\": \"http://tx3-jira-test.eastus.cloudapp.azure.com:8080/\",\n                \"Service Account\": \"emailtesting@tx3services.com\",\n                \"Service Password\": \"HVeTrBgQokjhgjmhgmnjhsnrty5667O8OkPqtKMp0RNedH9q+sm+nU0Kkr/Q==\",\n                \"Urls\": {\n                    \"Browser\": \"http://tx3-jira-test.eastus.cloudapp.azure.com:8080/browse/{Key}\",\n                    \"API\": \"http://tx3-jira-test.eastus.cloudapp.azure.com:8080/rest/api/2/issue/{Issue ID}\"\n                }\n            },\n            {\n                \"System\": \"qTest\",\n                \"Name\": \"Tricentis qTest Alcon Server\",\n                \"Server\": \"https://kmdeva.qtestnet.com\",\n                \"Urls\": {\n                    \"Browser\": \"https://kmdeva.qtestnet.com/p/{Project ID}/portal/project#key={Key}\",\n                    \"API\": \"https://kmdeva.qtestnet.com/api/v3/projects/{Project ID}/{Item Type}s/{Entity ID}\"\n                },\n                \"Service Account\": \"hfarris@tx3services.com\",\n                \"Service Password\": \"jtbHVV67667657RzYZrJvfhgjhjhgdjhgdjhgdjhgdjhgjghFt1bM=\",\n                \"qTest Name\": \"kmdeva\"\n            },\n            {\n                \"System\": \"qTest\",\n                \"Name\": \"Tx3 qTest Cloud Server\",\n                \"Server\": \"https://tx3.qtestnet.com\",\n                \"Urls\": {\n                    \"Browser\": \"https://tx3.qtestnet.com/p/{Project ID}/portal/project#key={Key}\",\n                    \"API\": \"https://tx3.qtestnet.com/api/v3/projects/{Project ID}/{Item Type}s/{Entity ID}\"\n                },\n                \"Service Account\": \"jberek@tx3services.com\",\n                \"Service Password\": \"xVFmav0KADFwwqR5gnjgfhgfhst565465645sghgaaTjlLwmZRKA=\",\n                \"qTest Name\": \"tx3\"\n            },\n            {\n                \"System\": \"JIRA\",\n                \"Name\": \"Jira Cloud\",\n                \"Server\": \"https://tx3.atlassian.net\",\n                \"Service Account\": \"emailtesting@tx3services.com\",\n                \"Service Password\": \"HVeTrBgQ78IgawcfCn9O8OkPqtKM/Qp0RNedH9q+sm+nU76765765hthsrthgtwyw45s4hQ==\",\n                \"Urls\": {\n                    \"Browser\": \"https://tx3.atlassian.net/browse/{Key}\",\n                    \"API\": \"https://tx3.atlassian.net/rest/api/2/issue/{Issue ID}\"\n                }\n            },\n            {\n                \"System\": \"JIRA\",\n                \"Name\": \"Jira Cloud - Mnghe\",\n                \"Server\": \"https://mnghe.atlassian.net\",\n                \"Service Account\": \"emailtesting@tx3services.com\",\n                \"Service Password\": \"dGba/evvbNmfxtrGeaXuQ3zRweFO2fdXdQdbeHgc5HzXsvpisBaNyXcH0FAsclmKKpiOrR/4DqS/fWJ0Jr5mSA==\",\n                \"Urls\": {\n                    \"Browser\": \"https://mnghe.atlassian.net/browse/{Key}\",\n                    \"API\": \"https://mnghe.atlassian.net/rest/api/2/issue/{Issue ID}\"\n                }\n            },\n            {\n                \"System\": \"VERA\",\n                \"Name\": \"Tx3 VERA Demo Server\",\n                \"Server\": \"https://vera-demo.tx3services.com\",\n                \"Urls\": {\n                    \"Browser\": \"https://vera-demo.tx3services.com:8443/details/\",\n                    \"API\": \"https://vera-demo.tx3services.com/rest/\"\n                },\n                \"Service Account\": \"\",\n                \"Service Password\": \"\"\n            }\n        ]\n    }\n}\n","import Constructor from \"../Constructor\";\nimport './ObjectField.css'\n\ninterface Props {\n    field: any\n    json: any\n    onChange:any\n    name?: string|number\n}\n\nconst ObjectField: React.FC<Props> = ({field, json,  onChange,name}) => {\n    const onChangeInObject = (key, value)=>{\n        if(name || name === 0) {\n            onChange(name,{...json, [key]: value})\n        }else{\n            onChange({...json, [key]: value})\n        }\n    }\n    const fields = Object.keys(field.fields)\n    return (\n        <div className='object-container'>\n                {fields.map((item, i) =>\n                    <div key={i} className='object-child-container'>\n                        <Constructor\n                            field={field.fields[item]}\n                            json={json[item]}\n                            name={item}\n                            onChange={onChangeInObject}/>\n                    </div>\n                )}\n        </div>\n    )\n}\n\nexport default ObjectField\n","import Constructor from \"../Constructor\";\nimport Collapsible from \"react-collapsible\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport * as React from \"react\";\nimport './ArrayField.css'\nimport {useState} from \"react\";\n\ninterface Props {\n    field: any\n    json: any\n    name?: string\n    onChange: any\n}\n\nconst ArrayField: React.FC<Props> = ({field, json, name, onChange}) => {\n    const [open, setOpen] = useState(false)\n\n    const onChangeInArray = (i, value) => {\n        const newArray = [...json]\n        newArray[i]=value\n        onChange(name, newArray)\n    }\n\n    return (\n        <div className='array-container'>\n            <Collapsible\n                trigger={\n                    <div className='title'>\n                        <div>{name}</div>\n                        <ExpandMoreIcon className={open ? 'rev-icon' : 'icon'}/>\n                    </div>\n                }\n                onOpening={() => setOpen(true)}\n                onClose={() => setOpen(false)}\n                transitionTime={200}\n            >\n                <div>\n                    {json.map((item, i) =>\n                        <Constructor key={i} field={field.innerType} json={item} name={i} onChange={onChangeInArray}/>\n                    )}\n                </div>\n            </Collapsible>\n        </div>\n    )\n}\n\nexport default ArrayField\n","import {TextField} from \"@material-ui/core\";\nimport {useFormik} from \"formik\";\nimport * as yup from \"yup\";\n\ninterface Props {\n    field: any\n    json: any\n    name?: string\n    onChange: any\n}\n\nconst StringField: React.FC<Props> = ({field, json, name,onChange}) => {\n\n    const formik = useFormik({\n        initialValues: {\n            label: name,\n            value: json\n        },\n        validateOnBlur: true,\n        validationSchema: yup.object({\n            'value':field\n        }),\n        onSubmit: () => {\n        }\n    });\n\n    const handleChange = (e) => {\n        formik.handleChange(e);\n        formik.setFieldTouched('value');\n        onChange(name,e.target.value)\n    }\n\n    return (\n        <div>\n            <TextField\n                fullWidth\n                name={'value'}\n                label={formik.values.label}\n                value={formik.values.value}\n                onChange={handleChange}\n                error={formik.touched.value && Boolean(formik.errors.value)}\n                helperText={formik.touched.value && formik.errors.value}\n            />\n        </div>\n    )\n}\n\nexport default StringField\n","import ObjectField from \"./ObjectField/ObjectField\";\nimport ArrayField from \"./ArrayField/ArrayField\";\nimport StringField from \"./StringtField/StringtField\";\n\ninterface Props {\n    field: any\n    json: any\n    name? :string\n    onChange: any\n}\n\nconst Constructor: React.FC<Props> = (props) => {\n    const type = props.field.type\n    const renderField = () => {\n        switch (type){\n            case \"object\":\n                return <ObjectField {...props} />\n            case \"array\":\n                return <ArrayField {...props}/>\n            case \"string\":\n                return <StringField {...props}/>\n            default:\n                return null\n        }\n    }\n    return renderField()\n}\n\nexport default Constructor\n","import * as React from 'react';\nimport JSONInput from 'react-json-editor-ajrm';\nimport locale from 'react-json-editor-ajrm/locale/en';\nimport './ViewJson.css'\n\ninterface Props {\n    data: object\n}\n\nconst ViewJson: React.FC<Props> = ({data}) => {\n    return (\n        <div className='json-display-window'>\n            <div>\n                <JSONInput\n                    locale={locale}\n                    placeholder={data}\n                    confirmGood={false}\n                    viewOnly={true}\n                    width='100%'\n                    height='100%'\n                />\n            </div>\n        </div>\n    )\n\n}\nexport default ViewJson\n","import * as React from \"react\";\nimport {useState} from \"react\";\nimport {SynchronizationPolicy} from '../../json/SynchronizationPolicy'\nimport Constructor from \"./Constructor/Constructor\";\nimport ViewJson from \"./ViewJson/ViewJson\";\nimport './NewEditor.css'\n\ninterface Props {\n    yupSchema: any\n}\n\nconst NewEditor: React.FC<Props> = ({yupSchema}) => {\n    const [formData, setFormData] = useState(SynchronizationPolicy)\n\n\n    const handleChange = (object) => {\n        setFormData(object)\n    }\n\n    return (\n        <div className='container'>\n            <div className='json-editor-window'>\n                <Constructor field={yupSchema} json={formData} onChange={handleChange}/>\n            </div>\n            <div>\n                <ViewJson data={formData}/>\n            </div>\n        </div>\n    )\n}\n\nexport default NewEditor\n","import * as yup from 'yup'\n\nexport const SynchronizationPolicySchema = yup.object({\n    \"Synchronization Policy\": yup.object({\n        \"Version\":yup.string().required('required'),\n        \"Locations\": yup.array().of(\n            yup.object({\n                \"System\": yup.string().required('required'),\n                \"Name\": yup.string().required('required'),\n                \"Server\": yup.string()\n                    .url('Enter valid url')\n                    .required('required'),\n                \"Service Account\": yup.string().required('required'),\n                \"Service Password\": yup.string().required('required'),\n                \"Urls\": yup.object({\n                    \"Browser\":yup.string()\n                        .url('Enter valid url')\n                        .required('required'),\n                    \"API\": yup.string()\n                        .url('Enter valid url')\n                        .required('required'),\n                })\n            })\n        )\n    })\n})\n","import * as React from 'react';\nimport './MainWindow.css'\nimport NewEditor from \"../NewEditor/NewEditor\";\nimport {SynchronizationPolicySchema} from \"../../json/schemes/SynchronizationPolicy\";\n\n\nconst MainWindow: React.FC = () => {\n    return (\n        <div>\n            <NewEditor yupSchema={SynchronizationPolicySchema}/>\n        </div>\n    )\n}\nexport default MainWindow\n","import MainWindow from \"./components/MainWindow/MainWindow\";\n\nconst App = () => <MainWindow/>\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}