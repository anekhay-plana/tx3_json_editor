{"version":3,"sources":["json/SynchronizationPolicy.js","components/NewEditor/Constructor/ObjectField/ObjectField.tsx","components/NewEditor/Constructor/ArrayField/ArrayField.tsx","components/NewEditor/Constructor/StringtField/StringtField.tsx","components/NewEditor/Constructor/Constructor.tsx","components/NewEditor/NewEditor.tsx","json/schemes/checkSchema.js","components/MainWindow/MainWindow.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["SynchronizationPolicy","ObjectField","field","json","fields","Object","keys","className","map","item","i","name","ArrayField","useState","open","setOpen","trigger","onOpening","onClose","transitionTime","innerType","StringField","formik","useFormik","initialValues","label","value","validateOnBlur","validationSchema","yup","onSubmit","TextField","fullWidth","values","onChange","e","handleChange","setFieldTouched","error","touched","Boolean","errors","helperText","Constructor","props","type","renderField","NewEditor","yupSchema","required","of","url","MainWindow","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c010fcce.chunk.js","sourcesContent":["export const SynchronizationPolicy = {\n    \"Synchronization Policy\": {\n        \"Version\": \"VERA Demo Env - 0.0.0.2\",\n        \"Locations\": [\n            {\n                \"System\": \"JIRA\",\n                \"Name\": \"Tx3 Demo Jira Server\",\n                \"Server\": \"http://jira-demo.tx3services.com:8080\",\n                \"Service Account\": \"test_vera\",\n                \"Service Password\": \"x2kwtrR5cZ/jdjdhjghdkjuyliuy9A=\",\n                \"Urls\": {\n                    \"Browser\": \"http://jira-demo.tx3services.com:8080/browse/{Key}\",\n                    \"API\": \"http://jira-demo.tx3services.com:8080/rest/api/2/issue/{Issue ID}\"\n                }\n            },\n            {\n                \"System\": \"JIRA\",\n                \"Name\": \"Tx3 JIRA Test Server\",\n                \"Server\": \"http://tx3-jira-test.eastus.cloudapp.azure.com:8080/\",\n                \"Service Account\": \"emailtesting@tx3services.com\",\n                \"Service Password\": \"HVeTrBgQokjhgjmhgmnjhsnrty5667O8OkPqtKMp0RNedH9q+sm+nU0Kkr/Q==\",\n                \"Urls\": {\n                    \"Browser\": \"http://tx3-jira-test.eastus.cloudapp.azure.com:8080/browse/{Key}\",\n                    \"API\": \"http://tx3-jira-test.eastus.cloudapp.azure.com:8080/rest/api/2/issue/{Issue ID}\"\n                }\n            },\n            {\n                \"System\": \"qTest\",\n                \"Name\": \"Tricentis qTest Alcon Server\",\n                \"Server\": \"https://kmdeva.qtestnet.com\",\n                \"Urls\": {\n                    \"Browser\": \"https://kmdeva.qtestnet.com/p/{Project ID}/portal/project#key={Key}\",\n                    \"API\": \"https://kmdeva.qtestnet.com/api/v3/projects/{Project ID}/{Item Type}s/{Entity ID}\"\n                },\n                \"Service Account\": \"hfarris@tx3services.com\",\n                \"Service Password\": \"jtbHVV67667657RzYZrJvfhgjhjhgdjhgdjhgdjhgdjhgjghFt1bM=\",\n                \"qTest Name\": \"kmdeva\"\n            },\n            {\n                \"System\": \"qTest\",\n                \"Name\": \"Tx3 qTest Cloud Server\",\n                \"Server\": \"https://tx3.qtestnet.com\",\n                \"Urls\": {\n                    \"Browser\": \"https://tx3.qtestnet.com/p/{Project ID}/portal/project#key={Key}\",\n                    \"API\": \"https://tx3.qtestnet.com/api/v3/projects/{Project ID}/{Item Type}s/{Entity ID}\"\n                },\n                \"Service Account\": \"jberek@tx3services.com\",\n                \"Service Password\": \"xVFmav0KADFwwqR5gnjgfhgfhst565465645sghgaaTjlLwmZRKA=\",\n                \"qTest Name\": \"tx3\"\n            },\n            {\n                \"System\": \"JIRA\",\n                \"Name\": \"Jira Cloud\",\n                \"Server\": \"https://tx3.atlassian.net\",\n                \"Service Account\": \"emailtesting@tx3services.com\",\n                \"Service Password\": \"HVeTrBgQ78IgawcfCn9O8OkPqtKM/Qp0RNedH9q+sm+nU76765765hthsrthgtwyw45s4hQ==\",\n                \"Urls\": {\n                    \"Browser\": \"https://tx3.atlassian.net/browse/{Key}\",\n                    \"API\": \"https://tx3.atlassian.net/rest/api/2/issue/{Issue ID}\"\n                }\n            },\n            {\n                \"System\": \"JIRA\",\n                \"Name\": \"Jira Cloud - Mnghe\",\n                \"Server\": \"https://mnghe.atlassian.net\",\n                \"Service Account\": \"emailtesting@tx3services.com\",\n                \"Service Password\": \"dGba/evvbNmfxtrGeaXuQ3zRweFO2fdXdQdbeHgc5HzXsvpisBaNyXcH0FAsclmKKpiOrR/4DqS/fWJ0Jr5mSA==\",\n                \"Urls\": {\n                    \"Browser\": \"https://mnghe.atlassian.net/browse/{Key}\",\n                    \"API\": \"https://mnghe.atlassian.net/rest/api/2/issue/{Issue ID}\"\n                }\n            },\n            {\n                \"System\": \"VERA\",\n                \"Name\": \"Tx3 VERA Demo Server\",\n                \"Server\": \"https://vera-demo.tx3services.com\",\n                \"Urls\": {\n                    \"Browser\": \"https://vera-demo.tx3services.com:8443/details/\",\n                    \"API\": \"https://vera-demo.tx3services.com/rest/\"\n                },\n                \"Service Account\": \"\",\n                \"Service Password\": \"\"\n            }\n        ]\n    }\n}\n","import Constructor from \"../Constructor\";\nimport './ObjectField.css'\n\ninterface Props {\n    field: any\n    json: any\n}\n\nconst ObjectField: React.FC<Props> = ({field, json}) => {\n    const fields = Object.keys(field.fields)\n    return (\n        <div className='object-container'>\n                {fields.map((item, i) =>\n                    <div key={i} className='object-child-container'>\n                        <Constructor field={field.fields[item]} json={json[item]} name={item}/>\n                    </div>\n                )}\n        </div>\n    )\n}\n\nexport default ObjectField\n","import Constructor from \"../Constructor\";\nimport Collapsible from \"react-collapsible\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport * as React from \"react\";\nimport './ArrayField.css'\nimport {useState} from \"react\";\n\ninterface Props {\n    field: any\n    json: any\n    name?: string\n}\n\nconst ArrayField: React.FC<Props> = ({field, json, name}) => {\nconst [open, setOpen]=useState(false)\n    return (\n        <div className='array-container'>\n            <Collapsible\n                trigger={\n                    <div className='title'>\n                        <div>{name}</div>\n                        <ExpandMoreIcon className={open ? 'rev-icon': 'icon'} />\n                    </div>\n                }\n                onOpening={()=>setOpen(true)}\n                onClose={()=>setOpen(false)}\n                transitionTime={200}\n            >\n                <div>\n                    {json.map((item, i) =>\n                        <Constructor key={i} field={field.innerType} json={item}/>\n                    )}\n                </div>\n            </Collapsible>\n        </div>\n    )\n}\n\nexport default ArrayField\n","import {TextField} from \"@material-ui/core\";\nimport {useFormik} from \"formik\";\nimport * as yup from \"yup\";\n\ninterface Props {\n    field: any\n    json: any\n    name?: string\n}\n\nconst StringField: React.FC<Props> = ({field, json, name}) => {\n\n    const formik = useFormik({\n        initialValues: {\n            label: name,\n            value: json\n        },\n        validateOnBlur: true,\n        validationSchema: yup.object({\n            'value':field\n        }),\n        onSubmit: () => {\n        }\n    });\n\n    const handleChange = (e) => {\n        formik.handleChange(e);\n        formik.setFieldTouched('value');\n    }\n\n    return (\n        <div>\n            <TextField\n                fullWidth\n                name={'value'}\n                label={formik.values.label}\n                value={formik.values.value}\n                onChange={handleChange}\n                error={formik.touched.value && Boolean(formik.errors.value)}\n                helperText={formik.touched.value && formik.errors.value}\n            />\n        </div>\n    )\n}\n\nexport default StringField\n","import ObjectField from \"./ObjectField/ObjectField\";\nimport ArrayField from \"./ArrayField/ArrayField\";\nimport StringField from \"./StringtField/StringtField\";\n\ninterface Props {\n    field: any\n    json: any\n    name? :string\n}\n\nconst Constructor: React.FC<Props> = (props) => {\n    const type = props.field.type\n    const renderField = () => {\n        switch (type){\n            case \"object\":\n                return <ObjectField {...props} />\n            case \"array\":\n                return <ArrayField {...props}/>\n            case \"string\":\n                return <StringField {...props}/>\n            default:\n                return null\n        }\n    }\n    return renderField()\n}\n\nexport default Constructor\n","import {SynchronizationPolicy} from '../../json/SynchronizationPolicy'\nimport Constructor from \"./Constructor/Constructor\";\n\ninterface Props {\n    yupSchema: any\n}\n\nconst NewEditor: React.FC<Props> = ({yupSchema}) => {\n    return (\n        <div>\n            <Constructor field={yupSchema} json={SynchronizationPolicy}/>\n        </div>\n    )\n}\n\nexport default NewEditor\n","import * as yup from 'yup'\n\nexport const yupSchema = yup.object({\n    \"Synchronization Policy\": yup.object({\n        \"Version\":yup.string().required().required('required'),\n        \"Locations\": yup.array().of(\n            yup.object({\n                \"System\": yup.string().required('required'),\n                \"Name\": yup.string().required('required'),\n                \"Server\": yup.string()\n                    .url('Enter valid url')\n                    .required('required'),\n                \"Service Account\": yup.string().required('required'),\n                \"Service Password\": yup.string().required('required'),\n                \"Urls\": yup.object({\n                    \"Browser\":yup.string()\n                        .url('Enter valid url')\n                        .required('required'),\n                    \"API\": yup.string()\n                        .url('Enter valid url')\n                        .required('required'),\n                })\n            })\n        )\n    })\n})\n","import * as React from 'react';\nimport './MainWindow.css'\nimport NewEditor from \"../NewEditor/NewEditor\";\nimport {yupSchema} from \"../../json/schemes/checkSchema\";\n\n\nconst MainWindow: React.FC = () => {\n    return (\n        <div>\n            <NewEditor yupSchema={yupSchema}/>\n        </div>\n    )\n}\nexport default MainWindow\n","import MainWindow from \"./components/MainWindow/MainWindow\";\n\nconst App = () => <MainWindow/>\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}