{"version":3,"sources":["json/RecordsManagementPolicy.js","components/NewEditor/Constructor/ObjectField/ObjectField.tsx","components/NewEditor/Constructor/ArrayField/ArrayField.tsx","components/NewEditor/Constructor/Constructor.tsx","components/NewEditor/EditWindow/EditWindowConstructor/ObjectField/ObjectField.tsx","components/NewEditor/EditWindow/EditWindowConstructor/ArrayField/ArrayField.tsx","components/NewEditor/EditWindow/EditWindowConstructor/StringtField/StringtField.tsx","components/NewEditor/EditWindow/EditWindowConstructor/EditWindowConstructor.tsx","components/NewEditor/EditWindow/EditWindow.tsx","components/NewEditor/NewEditor.tsx","json/schemes/RecordsManagementPolicy.js","components/MainWindow/MainWindow.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["RecordsManagementPolicy","ObjectField","field","json","onChange","name","onClick","useState","open","setOpen","fields","Object","keys","onChangeInObject","key","value","renderContent","filter","item","type","className","Boolean","length","map","i","ArrayField","onChangeInArray","newArray","innerType","Constructor","props","renderField","React","page","setPage","rowsPerPage","setRowsPerPage","handleClickItem","slice","index","TablePagination","rowsPerPageOptions","component","count","onChangePage","event","newPage","onChangeRowsPerPage","parseInt","target","StringField","formik","useFormik","initialValues","label","validateOnBlur","validationSchema","yup","onSubmit","useEffect","setFieldValue","TextField","fullWidth","values","e","handleChange","setFieldTouched","error","touched","errors","helperText","EditWindowConstructor","EditWindow","NewEditor","yupSchema","formData","setFormData","selectedItem","setSelectedItem","object","RecordsManagementPolicySchema","required","url","of","MainWindow","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.efc9ba9d.chunk.js","sourcesContent":["export const RecordsManagementPolicy = {\n    \"Records Management Policy\":\n    {\n        \"Version\": \"Tx3 Demo 1.0.0.2\",\n        \"Schema\":\n        {\n            \"ID\": \"http://tx3services.com/schemas/0/0/records-management-policy.json\",\n            \"Major\": \"0\",\n            \"Minor\": \"0\"\n        },\n        \"Record Types\": [\n        {\n            \"Name\": \"Test Case\",\n            \"Definitions\": [\n                {\n                    \"Systems\": [\"qTest\"],\n                    \"Aliases\": [\n                        {\n                            \"Policy Field\": \"ID\",\n                            \"System Field\": \"Req ID\"\n                        }\n                    ],\n                    \"Item Types\": [\"test-case\"],\n                    \"Singular Name\": \"Test Case\",\n                    \"Plural Name\": \"Test Cases\",\n                    \"Ownership Description\": \"created\",\n                    \"Content Originator\": \"Author\"\n                }\n            ],\n            \"Fields\": [\n                {\n                    \"Name\": \"Status\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Type\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Assigned To\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Description\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Precondition\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Priority\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"qTest Version ID\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"GxP\",\n                    \"Is Data\": \"Yes\"\n                }\n            ]\n        },\n        {\n            \"Name\": \"qTest Test Step\",\n            \"Definitions\": [\n                {\n                    \"Systems\": [\"qTest\"],\n                    \"Aliases\": [\n                        {\n                            \"Policy Field\": \"ID\",\n                            \"System Field\": \"Req ID\"\n                        }\n                    ],\n                    \"Item Types\": [\"test-step\"],\n                    \"Singular Name\": \"Test Step\",\n                    \"Plural Name\": \"Test Steps\",\n                    \"Ownership Description\": \"created\",\n                    \"Content Originator\": \"Author\"\n                }\n            ],\n            \"Fields\": [\n                {\n                    \"Name\": \"Description\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Expected Result\",\n                    \"Is Data\": \"Yes\"\n                }\n            ]\n        },\n        {\n            \"Name\": \"Test Run\",\n            \"Definitions\": [\n                {\n                    \"Systems\": [\"qTest\"],\n                    \"Aliases\": [\n                        {\n                            \"Policy Field\": \"ID\",\n                            \"System Field\": \"Req ID\"\n                        }\n                    ],\n                    \"Item Types\": [\"test-run\"],\n                    \"Singular Name\": \"Test Run\",\n                    \"Plural Name\": \"Test Runs\",\n                    \"Ownership Description\": \"created\",\n                    \"Content Originator\": \"Author\"\n                }\n            ],\n            \"Fields\": [\n                {\n                    \"Name\": \"Status\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Target Release/Build\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Test Case ID\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Approval Requirement (Custom Field)\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Custom Field\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Environment\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Assigned To\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Priority\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"GxP\",\n                    \"Is Data\": \"Yes\"\n                }\n            ]\n        },\n        {\n            \"Name\": \"qTest Test Log\",\n            \"Definitions\": [\n                {\n                    \"Systems\": [\"qTest\"],\n                    \"Aliases\": [\n                        {\n                            \"Policy Field\": \"ID\",\n                            \"System Field\": \"Req ID\"\n                        }\n                    ],\n                    \"Item Types\": [\"test-log\"],\n                    \"Singular Name\": \"Test Log\",\n                    \"Plural Name\": \"Test Logs\",\n                    \"Ownership Description\": \"created\",\n                    \"Content Originator\": \"Tester\"\n                }\n            ],\n            \"Fields\": [\n                {\n                    \"Name\": \"Test Case Name\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Test Case Version\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Status\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Execution Type\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Target Release/Build\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Executed Start\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Executed End\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Execution Log Notes\",\n                    \"Is Data\": \"Yes\"\n                }\n            ]\n        },\n        {\n            \"Name\": \"qTest Test Step Log\",\n            \"Definitions\": [\n                {\n                    \"Systems\": [\"qTest\"],\n                    \"Aliases\": [\n                        {\n                            \"Policy Field\": \"ID\",\n                            \"System Field\": \"Req ID\"\n                        }\n                    ],\n                    \"Item Types\": [\"test-step-log\"],\n                    \"Singular Name\": \"Test Step Log\",\n                    \"Plural Name\": \"Test StepLogs\",\n                    \"Ownership Description\": \"created\",\n                    \"Content Originator\": \"Tester\"\n                }\n            ],\n            \"Fields\": [\n                {\n                    \"Name\": \"Status\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Description\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Expected Result\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Actual Result\",\n                    \"Is Data\": \"Yes\"\n                }\n            ]\n        },\n        {\n            \"Name\": \"Story\",\n            \"Base Record Type\": \"Issue\",\n            \"Definitions\": [\n                {\n                    \"Systems\": [\"JIRA\"],\n                    \"Aliases\": [\n                        {\n                            \"Policy Field\": \"ID\",\n                            \"System Field\": \"Req ID\"\n                        }\n                    ],\n                    \"Item Types\": [\"Story\"],\n                    \"Singular Name\": \"Story\",\n                    \"Plural Name\": \"Stories\",\n                    \"Ownership Description\": \"created\",\n                    \"Content Originator\": \"Author\"\n                }\n            ],\n            \"Fields\": [\n                {\n                    \"Name\": \"Category\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Resolution\",\n                    \"Is Data\": \"Yes\"\n                }\n            ]\n        },\n        {\n            \"Name\": \"XRay Scenario\",\n            \"Base Record Type\": \"XRay Test\",\n            \"Definitions\": [\n                {\n                    \"Systems\": [\n                        \"JIRA\"\n                    ],\n                    \"Item Types\": [\n                        \"Test\"\n                    ],\n                    \"Constraints\": [\n                        {\n                            \"Type\": \"Field Is Equal\",\n                            \"Name\": \"Test Type\",\n                            \"Value\": \"Cucumber\"\n                        }\n                    ],\n                    \"Singular Name\": \"Test\",\n                    \"Plural Name\": \"Tests\",\n                    \"Ownership Description\": \"created\",\n                    \"Content Originator\": \"Author\"\n                }\n            ],\n            \"Fields\": [\n                {\n                    \"Name\": \"Test Type\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Cucumber Test Type\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Cucumber Scenario\",\n                    \"Is Data\": \"Yes\"\n                }\n            ]\n        },\n        {\n            \"Name\": \"XRay Generic Test\",\n            \"Base Record Type\": \"XRay Test\",\n            \"Definitions\": [\n                {\n                    \"Systems\": [\n                        \"JIRA\"\n                    ],\n                    \"Item Types\": [\n                        \"Test\"\n                    ],\n                    \"Constraints\": [\n                        {\n                            \"Type\": \"Field Is Equal\",\n                            \"Name\": \"Test Type\",\n                            \"Value\": \"Generic\"\n                        }\n                    ],\n                    \"Singular Name\": \"Test\",\n                    \"Plural Name\": \"Tests\",\n                    \"Ownership Description\": \"created\",\n                    \"Content Originator\": \"Author\"\n                }\n            ],\n            \"Fields\": [\n                {\n                    \"Name\": \"Test Type\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Generic Test Definition\",\n                    \"Is Data\": \"Yes\"\n                }\n            ]\n        },\n        {\n            \"Name\": \"XRay Manual Test\",\n            \"Base Record Type\": \"XRay Test\",\n            \"Definitions\": [\n                {\n                    \"Systems\": [\n                        \"JIRA\"\n                    ],\n                    \"Item Types\": [\n                        \"Test\"\n                    ],\n                    \"Constraints\": [\n                        {\n                            \"Type\": \"Field Is Equal\",\n                            \"Name\": \"Test Type\",\n                            \"Value\": \"Manual\"\n                        }\n                    ],\n                    \"Singular Name\": \"Test\",\n                    \"Plural Name\": \"Tests\",\n                    \"Ownership Description\": \"created\",\n                    \"Content Originator\": \"Author\"\n                }\n            ],\n            \"Fields\": [\n                {\n                    \"Name\": \"Test Type\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Manual Test Steps\",\n                    \"Is Data\": \"Yes\"\n                }\n            ]\n        },\n        {\n            \"Name\": \"XRay Test\",\n            \"Base Record Type\": \"Issue\",\n            \"Definitions\": [\n                {\n                    \"Systems\": [\n                        \"JIRA\"\n                    ],\n                    \"Item Types\": [\n                        \"Test\"\n                    ],\n                    \"Singular Name\": \"Test\",\n                    \"Plural Name\": \"Tests\",\n                    \"Ownership Description\": \"created\",\n                    \"Content Originator\": \"Author\"\n                }\n            ],\n            \"Fields\": [\n                {\n                    \"Name\": \"Test Type\",\n                    \"Is Data\": \"Yes\"\n                }\n            ]\n        },\n        {\n            \"Name\": \"XRay Pre-Condition\",\n            \"Base Record Type\": \"Issue\",\n            \"Definitions\": [\n                {\n                    \"Systems\": [\n                        \"JIRA\"\n                    ],\n                    \"Item Types\": [\n                        \"Pre-Condition\"\n                    ],\n                    \"Singular Name\": \"Pre-Condition\",\n                    \"Plural Name\": \"Pre-Conditions\",\n                    \"Ownership Description\": \"created\",\n                    \"Content Originator\": \"Author\"\n                }\n            ],\n            \"Fields\": [\n                {\n                    \"Name\": \"Pre-Condition Type\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Conditions\",\n                    \"Is Data\": \"Yes\"\n                }\n            ]\n        },\n        {\n            \"Name\": \"XRay Test Plan\",\n            \"Base Record Type\": \"Issue\",\n            \"Definitions\": [\n                {\n                    \"Systems\": [\n                        \"JIRA\"\n                    ],\n                    \"Item Types\": [\n                        \"Test Plan\"\n                    ],\n                    \"Singular Name\": \"Test Plan\",\n                    \"Plural Name\": \"Test Plans\",\n                    \"Ownership Description\": \"created\",\n                    \"Content Originator\": \"Author\"\n                }\n            ],\n            \"Fields\": [\n                {\n                    \"Name\": \"Test Plan Status\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Tests associated with a Test Plan\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Begin Date\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"End Date\",\n                    \"Is Data\": \"Yes\"\n                }\n            ]\n        },\n        {\n            \"Name\": \"XRay Execution\",\n            \"Base Record Type\": \"Issue\",\n            \"Definitions\": [\n                {\n                    \"Systems\": [\n                        \"JIRA\"\n                    ],\n                    \"Item Types\": [\n                        \"Test Execution\",\n                        \"Sub Test Execution\"\n                    ],\n                    \"Singular Name\": \"Test Plan\",\n                    \"Plural Name\": \"Test Plans\",\n                    \"Ownership Description\": \"created\",\n                    \"Content Originator\": \"Author\"\n                }\n            ],\n            \"Fields\": [\n                {\n                    \"Name\": \"Test Execution Status\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Tests association with a Test Execution\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Test Environments\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Test Plan\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Begin Date\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"End Date\",\n                    \"Is Data\": \"Yes\"\n                }\n            ]\n        },\n        {\n            \"Name\": \"Defect\",\n            \"Base Record Type\": \"Issue\",\n            \"Definitions\": [\n                {\n                    \"Systems\": [\"JIRA\"],\n                    \"Aliases\": [\n                        {\n                            \"Policy Field\": \"ID\",\n                            \"System Field\": \"Req ID\"\n                        }\n                    ],\n                    \"Item Types\": [\"Bug\"],\n                    \"Singular Name\": \"Bug\",\n                    \"Plural Name\": \"Bugs\",\n                    \"Ownership Description\": \"created\",\n                    \"Content Originator\": \"Author\"\n                }\n            ],\n            \"Fields\": [\n                {\n                    \"Name\": \"Category\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Resolution\",\n                    \"Is Data\": \"Yes\"\n                }\n            ]\n        },\n\n        {\n            \"Name\": \"Issue\",\n            \"Definitions\": [\n                {\n                    \"Systems\": [\"JIRA\"],\n                    \"Aliases\": [\n                        {\n                            \"Policy Field\": \"ID\",\n                            \"System Field\": \"Req ID\"\n                        }\n                    ],\n                    \"Singular Name\": \"Issue\",\n                    \"Plural Name\": \"Issues\",\n                    \"Ownership Description\": \"created\",\n                    \"Content Originator\": \"Author\"\n                }\n            ],\n            \"Fields\": [\n                {\n                    \"Name\": \"Component\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Description\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Summary\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Issue Type\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Acceptance Criteria\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Functional Specification\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Design Specification\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Configuration Specification\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Risk Classification\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Created\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Started\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Due Started\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Due Date\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Updated\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Priority\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Labels\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Original Estimate\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Remaining Estimate\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Affects Version/s\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Fix Version/s\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Resolution Detail\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"GxP\",\n                    \"Is Data\": \"Yes\"\n                },\n                {\n                    \"Name\": \"Revision Reason\",\n                    \"Is Data\": \"Yes\"\n                }\n            ]\n        }\n    ]\n    }\n}\n","import * as React from \"react\";\nimport {useEffect, useState} from \"react\";\nimport Constructor from \"../Constructor\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport './ObjectField.css'\n\ninterface Props {\n    field?: any\n    json?: any\n    onChange?: any\n    name?: string | number\n    onClick?: any\n}\n\nconst ObjectField: React.FC<Props> = ({field, json, onChange, name, onClick, }) => {\n    const [open, setOpen] = useState(name? false : true)\n    const fields = Object.keys(field.fields)\n\n    \n    const handleClickObject = () => {\n        setOpen(true)\n        onClick(field, json, onChange, name, onClick)\n    }\n\n    const onOpen = () => {\n        setOpen(!open)\n    }\n\n    const onChangeInObject = (key, value) => {\n        if (name || name === 0) {\n            onChange(name, {...json, [key]: value})\n        } else {\n            onChange({...json, [key]: value})\n        }\n    }\n\n    const renderContent = fields.filter((item) => field.fields[item].type !== 'string')\n\n    return (\n        <div className='object-container'>\n            {Boolean(name && typeof name !== \"number\") &&\n            <div className='title'>\n                {Boolean(renderContent.length) &&\n                <ExpandMoreIcon\n                    onClick={onOpen}\n                    className={open ? 'rev-icon' : ''}\n                />\n                }\n                <div onClick={handleClickObject}>\n                    {name}\n                </div>\n            </div>\n            }\n            {open &&\n            <div className='object-child-container'>\n                {fields.map((item, i) =>\n                    <div key={i} className='object-child-item'>\n                        <Constructor\n                            field={field.fields[item]}\n                            json={json[item] || ''}\n                            name={item}\n                            onChange={onChangeInObject}\n                            onClick={onClick}\n                        />\n                    </div>\n                )}\n            </div>\n            }\n        </div>\n    )\n}\n\nexport default ObjectField\n","import * as React from \"react\";\nimport {useState} from \"react\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Constructor from \"../Constructor\";\nimport './ArrayField.css'\n\ninterface Props {\n    field?: any\n    json?: any\n    name?: string\n    onChange?: any\n    onClick?: any\n}\n\nconst ArrayField: React.FC<Props> = ({field, json = [], name, onChange, onClick}) => {\n    const [open, setOpen] = useState(false)\n\n    const onOpen = () => {\n        setOpen(!open)\n    }\n\n    const onChangeInArray = (i, value) => {\n        const newArray = [...json]\n        newArray[i] = value\n        onChange(name, newArray)\n    }\n\n    const handleClickArray = () =>{\n        setOpen(true)\n        onClick(field, json, onChange, name,onClick)\n    }\n\n    return (\n        <div className='array-container'>\n            <div className='title'>\n                <ExpandMoreIcon onClick={onOpen} className={open?'rev-icon': ''}/>\n                <div onClick={handleClickArray}>{name}</div>\n            </div>\n            <div>\n                <div className='array-child-container'>\n                    {(json && open) &&\n                        <div>\n                    {\n                        json.map((item, i) =>\n                            <div key={i} className='array-item'>\n                                <div>\n                                    <Constructor\n                                        field={field.innerType}\n                                        json={item}\n                                        name={name + (i + 1)}\n                                        onChange={onChangeInArray}\n                                        onClick={onClick}\n                                    />\n                                </div>\n                            </div>\n                        )}\n                        </div>\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ArrayField\n","import ObjectField from \"./ObjectField/ObjectField\";\nimport ArrayField from \"./ArrayField/ArrayField\";\n\ninterface Props {\n    field?: any\n    json?: any\n    name?: string\n    onChange?: any\n    onClick?: any\n}\n\nconst Constructor: React.FC<Props> = (props) => {\n    const type = props.field.type\n    const renderField = () => {\n        switch (type) {\n            case \"object\":\n                return <ObjectField {...props} />\n            case \"array\":\n                return <ArrayField {...props}/>\n            default:\n                return null\n        }\n    }\n    return renderField()\n}\n\nexport default Constructor\n","import EditWindowConstructor from \"../EditWindowConstructor\";\nimport * as React from \"react\";\nimport './ObjectField.css'\n\ninterface Props {\n    field?: any\n    json?: any\n    onChange?: any\n    name?: string | number\n    onClick?: any\n}\n\nconst ObjectField: React.FC<Props> = ({field, json, onChange, name,onClick}) => {\n\n    const handleClickObject = () =>{\n        onClick(field, json, onChange, name,onClick)\n    }\n\n    const onChangeInObject = (key, value) => {\n        if (name || name === 0) {\n            onChange(name, {...json, [key]: value})\n        } else {\n            onChange({...json, [key]: value})\n        }\n    }\n    const fields = Object.keys(field.fields)\n    return (\n        <div className='object-container'>\n            {Boolean(name && typeof name !== \"number\") &&\n            <div className='edit-title'>\n                <h2>\n                    {name}\n                </h2>\n            </div>\n            }\n                {fields.map((item, i) =>\n                    <div key={i} className='object-child-item'>\n                        <EditWindowConstructor\n                            field={field.fields[item]}\n                            json={json[item] || ''}\n                            name={item}\n                            onChange={onChangeInObject}\n                            onClick={onClick}\n                        />\n                    </div>\n                )}\n        </div>\n    )\n}\n\nexport default ObjectField\n","import * as React from \"react\";\nimport {TablePagination} from \"@material-ui/core\";\nimport './ArrayField.css'\n\ninterface Props {\n    field?: any\n    json?: any\n    name?: string\n    onChange?: any\n    onClick?: any\n}\n\nconst ArrayField: React.FC<Props> = ({field, json = [], name, onChange, onClick}) => {\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    // const handleClickAddItem = () => {\n    //     const newArray = [...json]\n    //     if (field.innerType.type === 'string') {\n    //         newArray.push('')\n    //     } else {\n    //         const newObj = createObject(field.innerType)\n    //         newArray.push(newObj)\n    //     }\n    //     onChange(name, newArray)\n    // }\n    //\n    // const handleClickRemoveItem = (index) => {\n    //     const newArray = json.filter((item, i) => i !== index)\n    //     onChange(name, newArray)\n    // }\n\n    const handleClickItem = (item, i) => {\n        onClick(field.innerType, item, onChange, name + (i + 1), onClick)\n    }\n\n    return (\n        <div className='array-edit-container'>\n            <div className='edit-title'>\n                <h2>{name}</h2>\n            </div>\n            <div>\n                {json\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    .map((item, index) => (\n                            <div key={index}>\n                                <div>\n                                    {name + ' ' + (index + page * rowsPerPage + 1)}\n                                </div>\n                                <div>\n                                    <div className='buttons'>\n                                        <button\n                                            onClick={() => handleClickItem(item, index + page * rowsPerPage)}\n                                        >\n                                            Edit\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                    )}\n                {json.length > 5 &&\n                <TablePagination\n                    rowsPerPageOptions={[5]}\n                    component=\"div\"\n                    count={json.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default ArrayField\n","import {TextField} from \"@material-ui/core\";\nimport {useFormik} from \"formik\";\nimport * as yup from \"yup\";\nimport {useEffect} from \"react\";\n\ninterface Props {\n    field: any\n    json?: any\n    name?: string|number\n    onChange: any\n}\n\nconst StringField: React.FC<Props> = ({field, json, name,onChange}) => {\n\n    const formik = useFormik({\n        initialValues: {\n            label: typeof name === 'string'? name : '',\n            value: json\n        },\n        validateOnBlur: true,\n        validationSchema: yup.object({\n            'value':field\n        }),\n        onSubmit: () => {\n        }\n    });\n\n    useEffect(() => {\n        formik.setFieldValue('value', json)\n    }, [json])\n\n    const handleChange = (e) => {\n        formik.handleChange(e);\n        formik.setFieldTouched('value');\n        onChange(name,e.target.value)\n    }\n\n    return (\n        <div>\n            <TextField\n                fullWidth\n                name={'value'}\n                label={formik.values.label}\n                value={formik.values.value}\n                onChange={handleChange}\n                error={formik.touched.value && Boolean(formik.errors.value)}\n                helperText={formik.touched.value && formik.errors.value}\n            />\n        </div>\n    )\n}\n\nexport default StringField\n","import ObjectField from \"./ObjectField/ObjectField\";\nimport ArrayField from \"./ArrayField/ArrayField\";\nimport StringField from \"./StringtField/StringtField\";\n\nconst EditWindowConstructor = (props) => {\n    const type = props.field.type\n    const renderField = () => {\n        switch (type) {\n            case \"object\":\n                return <ObjectField {...props} />\n            case \"array\":\n                return <ArrayField {...props}/>\n            case \"string\":\n                return <StringField {...props}/>\n            default:\n                return null\n        }\n    }\n    return renderField()\n }\n\n export default EditWindowConstructor\n","import * as React from \"react\";\nimport Constructor from \"../Constructor/Constructor\";\nimport EditWindowConstructor from \"./EditWindowConstructor/EditWindowConstructor\";\n\ninterface Props {\n    field?: any\n    json?: any\n    onChange?: any\n}\n\nconst EditWindow: React.FC<Props> = (props) => {\n    return <EditWindowConstructor {...props}/>\n}\n\nexport default EditWindow\n","import * as React from \"react\";\nimport {useState} from \"react\";\nimport {RecordsManagementPolicy} from \"../../json/RecordsManagementPolicy\";\nimport Constructor from \"./Constructor/Constructor\";\nimport './NewEditor.css'\nimport EditWindow from \"./EditWindow/EditWindow\";\n\ninterface Props {\n    yupSchema: any\n}\n\nconst NewEditor: React.FC<Props> = ({yupSchema}) => {\n    const [formData, setFormData] = useState(RecordsManagementPolicy)\n    const [selectedItem, setSelectedItem] = useState<object >()\n\n    const handleClickElement = (field, json, onChange, name, onClick) => {\n        const selected = {name, field, json, onChange, onClick}\n        setSelectedItem(selected)\n    }\n\n    const handleChange = (object) => {\n        setFormData(object)\n    }\n\n    return (\n        <div className='container'>\n            <div className='json-tree-window'>\n                <div>\n                    <Constructor\n                        field={yupSchema}\n                        json={formData}\n                        onChange={handleChange}\n                        onClick={handleClickElement}\n                    />\n                </div>\n            </div>\n\n            <div className='json-editor-window'>\n                {selectedItem &&\n                <EditWindow {...selectedItem}/>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default NewEditor\n","import * as yup from 'yup'\n\nexport const RecordsManagementPolicySchema = yup.object({\n    \"Records Management Policy\": yup.object({\n        \"Version\": yup.string().required('required'),\n        \"Schema\": yup.object({\n            \"ID\": yup.string().url('Enter valid url').required('required'),\n            \"Major\": yup.string().required('required'),\n            \"Minor\": yup.string().required('required')\n        }),\n        \"Record Types\": yup.array().of(\n            yup.object({\n                \"Name\": yup.string().required('required'),\n                \"Definitions\": yup.array().of(\n                    yup.object({\n                        \"Systems\":yup.array().of(\n                            yup.string().required('required')\n                        ),\n                        \"Aliases\":yup.array().of(\n                            yup.object({\n                                \"Policy Field\": yup.string().required('required'),\n                                \"System Field\":yup.string().required('required')\n                            })\n                        ),\n                        \"Item Types\":yup.array().of(\n                            yup.string().required('required')\n                        ),\n                        \"Singular Name\": yup.string().required('required'),\n                        \"Plural Name\": yup.string().required('required'),\n                        \"Ownership Description\": yup.string().required('required'),\n                        \"Content Originator\": yup.string().required('required'),\n                    })\n                ),\n                \"Fields\": yup.array().of(\n                    yup.object({\n                        \"Name\": yup.string().required('required'),\n                        \"Is Data\": yup.string().required('required')\n                    })\n                )\n            })\n        )\n    })\n})\n","import * as React from 'react';\nimport NewEditor from \"../NewEditor/NewEditor\";\nimport {RecordsManagementPolicySchema} from \"../../json/schemes/RecordsManagementPolicy\";\nimport './MainWindow.css'\n\n\n\nconst MainWindow: React.FC = () => {\n    return (\n        <div>\n            <NewEditor yupSchema={RecordsManagementPolicySchema}/>\n        </div>\n    )\n}\nexport default MainWindow\n","import MainWindow from \"./components/MainWindow/MainWindow\";\nimport './App.css'\n\nconst App = () => <MainWindow/>\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}